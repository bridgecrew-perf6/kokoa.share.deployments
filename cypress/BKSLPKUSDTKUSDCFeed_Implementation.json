{
  "address": "0xEEEe25550B6d72583a54f44D74dc4D589D02Bfe0",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressBook",
          "type": "address"
        }
      ],
      "name": "__BKSLPKUSDTKUSDCFeed_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "collateralType_",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "addressBook_",
          "type": "address"
        }
      ],
      "name": "__BKSStableStableLpFeed_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__Feed_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressBook",
      "outputs": [
        {
          "internalType": "contract IAddressBook",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "valid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2ca558ef23d46cae8e2673c1112bbf946a5e7d20d182cc16397002ff16b309bb",
  "receipt": {
    "to": null,
    "from": "0x276199434a04b2607D5E95670e5cB6a7E7f10f3d",
    "contractAddress": "0xEEEe25550B6d72583a54f44D74dc4D589D02Bfe0",
    "transactionIndex": 4,
    "gasUsed": "1291262",
    "logsBloom": "0x
    "blockHash": "0x1c2eb96946dcce15360d40cbd857ffce3d3567284304d4c18577c79d430039e4",
    "transactionHash": "0x2ca558ef23d46cae8e2673c1112bbf946a5e7d20d182cc16397002ff16b309bb",
    "logs": [],
    "blockNumber": 79129311,
    "cumulativeGasUsed": null,
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "daac9cba34dfabe5953ff704314717f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressBook\",\"type\":\"address\"}],\"name\":\"__BKSLPKUSDTKUSDCFeed_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"collateralType_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addressBook_\",\"type\":\"address\"}],\"name\":\"__BKSStableStableLpFeed_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__Feed_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressBook\",\"outputs\":[{\"internalType\":\"contract IAddressBook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"clear()\":{\"details\":\"it is should be called by only governance (EOA for now).\"},\"getPrice()\":{\"returns\":{\"_0\":\"value of price, validation check\"}},\"set(uint256)\":{\"details\":\"it should be called by only whitelisted operator\",\"params\":{\"_price\":\"value of price to set\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"clear()\":{\"notice\":\"make price invalid\"},\"getPrice()\":{\"notice\":\"get price\"},\"set(uint256)\":{\"notice\":\"set price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol\":\"BKSLPKUSDTKUSDCFeed\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\nimport \\\"../../interface/klayswap/IKlaytnExchangeImpl.sol\\\";\\nimport \\\"../../oracle/feed/BKSStableStableLpFeed.sol\\\";\\n\\ncontract BKSLPKUSDTKUSDCFeed is BKSStableStableLpFeed {\\n    function __BKSLPKUSDTKUSDCFeed_init(address addressBook) public initializer {\\n        __BKSStableStableLpFeed_init(bytes32(\\\"KSLPKUSDTKUSDC\\\"), addressBook);\\n    }\\n}\\n\",\"keccak256\":\"0x84e4e36e7043dcde13795c03dcaea5b2f6819747f98037d8035f0911b7899bcc\",\"license\":\"MIT\"},\"contracts/interface/IAddressBook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\ninterface IAddressBook {\\n    struct CollateralContracts {\\n        address token;\\n        address bond;\\n        address bondAuctionHouse;\\n        address bondFeed;\\n        address bondIssuedKsdPool;\\n        address bondSchedule;\\n        address gateway;\\n        address yieldFactory;\\n    }\\n\\n    function config(bytes32 what, address data) external;\\n\\n    function config(\\n        bytes32 collateralType,\\n        bytes32 what,\\n        address data\\n    ) external;\\n\\n    function configurator() external view returns (address);\\n\\n    function ledger() external view returns (address);\\n\\n    function ksd() external view returns (address);\\n\\n    function ksdGateway() external view returns (address);\\n\\n    function yieldManager() external view returns (address);\\n\\n    function kokoaRewardManager() external view returns (address);\\n\\n    function ksdRewardManager() external view returns (address);\\n\\n    function ksdRefundManager() external view returns (address);\\n\\n    function collateralContracts(bytes32 collateralType)\\n        external\\n        view\\n        returns (\\n            address,\\n            address,\\n            address,\\n            address,\\n            address,\\n            address,\\n            address,\\n            address\\n        );\\n\\n    function getCollateralContract(bytes32 collateralType, bytes32 what) external view returns (address);\\n\\n    function ksp() external view returns (address);\\n}\\n\",\"keccak256\":\"0x1607e62b9f40917da7653b0c0317b1fdf12186031077998991f8decc938f6d9a\",\"license\":\"MIT\"},\"contracts/interface/IFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\n/// @title price feed by oracle\\ninterface IFeed {\\n    /// @notice get price information\\n    /// @return value of price, validation check\\n    function getPrice() external view returns (uint256, bool);\\n}\\n\",\"keccak256\":\"0xe5f7b7087313b6789fc804492dd31ff59907f143d85934eedbecdca1700025e0\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\ninterface IKIP13 {\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x651958b745058d476a41ab467d508d2fe6c131d83cdbe9dfe28b3893d32c48fd\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IKIP13.sol\\\";\\n\\ninterface IKIP7 is IKIP13 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function safeTransfer(\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function safeTransfer(address recipient, uint256 amount) external;\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6fb8afaff38611db93f55c13447c08ea47e5392b895a75bf43999808176528e0\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IKIP7.sol\\\";\\n\\ninterface IKIP7Detailed is IKIP7 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xb19fcc63818f59c23defe41b45aa9235cd43a373d97fe222fc939ad3f0f697c9\",\"license\":\"MIT\"},\"contracts/interface/klayswap/IKlaytnExchangeImpl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\nimport \\\"../kip/IKIP7Detailed.sol\\\";\\n\\ninterface IKlaytnExchange is IKIP7Detailed {\\n    function fee() external view returns (uint256);\\n\\n    function getCurrentPool() external view returns (uint256, uint256);\\n\\n    function addKctLiquidity(uint256 amountA, uint256 amountB) external;\\n\\n    function estimatePos(address token, uint256 amount) external view returns (uint256);\\n\\n    function estimateNeg(address token, uint256 amount) external view returns (uint256);\\n\\n    function addKlayLiquidity(uint256 amount) external payable;\\n\\n    function tokenA() external view returns (address);\\n\\n    function tokenB() external view returns (address);\\n\\n    function removeLiquidity(uint256 amount) external;\\n\\n    function claimReward() external;\\n\\n    function updateMiningIndex() external;\\n\\n    function changeMiningRate(uint256 _mining) external;\\n}\\n\",\"keccak256\":\"0xf73ef854715fe5c95229cb544fb23bb98483976769eace23a24a9b841c4cbe44\",\"license\":\"MIT\"},\"contracts/library/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./openzeppelin/proxy/Initializable.sol\\\";\\n\\ncontract AccessControl is Initializable {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        _checkRole(bytes32(\\\"owner\\\"), msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        _checkRole(bytes32(\\\"admin\\\"), msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyOperator() {\\n        _checkRole(bytes32(\\\"operator\\\"), msg.sender);\\n        _;\\n    }\\n\\n    function __AccessControl_init() internal initializer {\\n        __AccessControl_init_unchained();\\n    }\\n\\n    function __AccessControl_init_unchained() private initializer {\\n        _setupRole(bytes32(\\\"owner\\\"), msg.sender);\\n        _setRoleAdmin(bytes32(\\\"admin\\\"), bytes32(\\\"owner\\\"));\\n        _setRoleAdmin(bytes32(\\\"operator\\\"), bytes32(\\\"owner\\\"));\\n        _setupRole(bytes32(\\\"admin\\\"), msg.sender);\\n        _setupRole(bytes32(\\\"operator\\\"), msg.sender);\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    function _checkRole(bytes32 role, address account) internal view {\\n        if (!hasRole(role, account)) {\\n            revert(\\\"AccessControl:_checkRole:invalid role\\\");\\n        }\\n    }\\n\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    function grantRole(bytes32 role, address account) public onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    function revokeRole(bytes32 role, address account) public onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    function renounceRole(bytes32 role, address account) public {\\n        require(account == msg.sender, \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    function _setupRole(bytes32 role, address account) internal {\\n        _grantRole(role, account);\\n    }\\n\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, msg.sender);\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, msg.sender);\\n        }\\n    }\\n\\n    // --- ownable --\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _grantRole(bytes32(\\\"owner\\\"), newOwner);\\n        _revokeRole(bytes32(\\\"owner\\\"), msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x16d2c3697b545ce0f8f6508d64eef0522b972736cbe77fc7c2e7e50a348f94b8\",\"license\":\"MIT\"},\"contracts/library/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AccessControl.sol\\\";\\n\\nabstract contract Pausable is AccessControl {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    function __Pausable_init() internal initializer {\\n        __AccessControl_init();\\n        _setRoleAdmin(bytes32(\\\"pauser\\\"), bytes32(\\\"owner\\\"));\\n        _setupRole(bytes32(\\\"pauser\\\"), msg.sender);\\n    }\\n\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    modifier whenNotPaused() virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    function pause() public whenNotPaused onlyRole(\\\"pauser\\\") {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    function unpause() public whenPaused onlyRole(\\\"pauser\\\") {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x09830075c06c05d623c2db6ce3f84b495181ab439043cdaab714060b9fc23f5a\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.3;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        // extcodesize checks the size of the code stored in an address, and\\n        // address returns the current address. Since the code is still not\\n        // deployed when running a constructor, any checks on its code size will\\n        // yield zero, making it an effective way to detect if a contract is\\n        // under construction or not.\\n        address self = address(this);\\n        uint256 cs;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            cs := extcodesize(self)\\n        }\\n        return cs == 0;\\n    }\\n}\\n\",\"keccak256\":\"0x95a413b1c4dc23bacf1a16b826a929f2ff756835e3ff3018aeff63afd497886f\",\"license\":\"MIT\"},\"contracts/oracle/feed/BKSStableStableLpFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\nimport \\\"../../interface/klayswap/IKlaytnExchangeImpl.sol\\\";\\nimport \\\"../../interface/IAddressBook.sol\\\";\\nimport \\\"./Feed.sol\\\";\\n\\ncontract BKSStableStableLpFeed is Feed {\\n    IAddressBook public addressBook;\\n    bytes32 public collateralType;\\n\\n    function __BKSStableStableLpFeed_init(bytes32 collateralType_, address addressBook_) public initializer {\\n        __Feed_init();\\n        collateralType = collateralType_;\\n        addressBook = IAddressBook(addressBook_);\\n    }\\n\\n    function getPrice() public view override returns (uint256, bool) {\\n        address lpToken = addressBook.getCollateralContract(collateralType, bytes32(\\\"token\\\"));\\n        address tokenA = IKlaytnExchange(lpToken).tokenA();\\n        address tokenB = IKlaytnExchange(lpToken).tokenB();\\n        uint256 decimalsA = IKIP7Detailed(tokenA).decimals();\\n        uint256 decimalsB = IKIP7Detailed(tokenB).decimals();\\n        (uint256 poolA, uint256 poolB) = IKlaytnExchange(lpToken).getCurrentPool();\\n        uint256 totalSupply = IKlaytnExchange(lpToken).totalSupply();\\n        uint256 decimalsLp = IKlaytnExchange(lpToken).decimals();\\n        uint256 targetDecimals = 36 - (decimalsA + decimalsB);\\n        uint256 price_ = ((poolA * (10**decimalsB) + poolB * (10**decimalsA)) * (10**targetDecimals)) / totalSupply;\\n        return (price_, true);\\n    }\\n}\\n\",\"keccak256\":\"0x17659e03352043fa551f12fbc1c700f4b541c2c0e7439d67ab894eddd3b23341\",\"license\":\"MIT\"},\"contracts/oracle/feed/Feed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\nimport \\\"../../interface/IFeed.sol\\\";\\nimport \\\"../../library/AccessControl.sol\\\";\\nimport \\\"../../library/Pausable.sol\\\";\\n\\n/// @notice the source of collateral price. The price is used by oracle.\\n/// The price will be set directly by whitelisted operator.\\ncontract Feed is IFeed, AccessControl, Pausable {\\n    bool public valid;\\n    uint256 public price; // WAD\\n\\n    function __Feed_init() public initializer {\\n        __Pausable_init();\\n    }\\n\\n    /// @notice get price\\n    /// @return value of price, validation check\\n    function getPrice() public view virtual override returns (uint256, bool) {\\n        return (price, valid);\\n    }\\n\\n    /// @notice set price\\n    /// @param _price value of price to set\\n    /// @dev it should be called by only whitelisted operator\\n    function set(uint256 _price) external virtual onlyOperator whenNotPaused {\\n        price = _price;\\n        valid = true;\\n    }\\n\\n    /// @notice make price invalid\\n    /// @dev it is should be called by only governance (EOA for now).\\n    function clear() external onlyOwner {\\n        valid = false;\\n    }\\n}\\n\",\"keccak256\":\"0x2f908e32445c81f371e1ec464bb616250a00942b2b4852c007e51f2143b31cc1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061121f806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806391d14854116100ad578063d547741f11610071578063d547741f14610240578063e824600f14610253578063f2fde38b1461025c578063f5887cdd1461026f578063fda090681461029a5761012c565b806391d14854146101ed57806398d5fdca14610200578063a035b1fe1461021d578063a217fddf14610226578063c19912191461022e5761012c565b806352efea6e116100f457806352efea6e146101a05780635c975abb146101a857806360fe47b1146101bf5780638456cb59146101d257806388ad6b5b146101da5761012c565b806317dc4aa014610131578063248a9ca31461013b5780632f2ff15d1461017257806336568abe146101855780633f4ba83a14610198575b600080fd5b6101396102ad565b005b61015f610149366004610f4b565b6000908152600160208190526040909120015490565b6040519081526020015b60405180910390f35b610139610180366004610f63565b610334565b610139610193366004610f63565b610360565b6101396103de565b61013961047c565b60025460ff165b6040519015158152602001610169565b6101396101cd366004610f4b565b61049b565b61013961050a565b6101396101e8366004610f63565b6105a1565b6101af6101fb366004610f63565b610640565b61020861066b565b60408051928352901515602083015201610169565b61015f60035481565b61015f600081565b6002546101af90610100900460ff1681565b61013961024e366004610f63565b610ac0565b61015f60055481565b61013961026a366004610f0c565b610ae7565b600454610282906001600160a01b031681565b6040516001600160a01b039091168152602001610169565b6101396102a8366004610f0c565b610b1d565b600054610100900460ff16806102c25750303b155b806102d0575060005460ff16155b6102f55760405162461bcd60e51b81526004016102ec90610fee565b60405180910390fd5b600054610100900460ff16158015610317576000805461ffff19166101011790555b61031f610bae565b8015610331576000805461ff00191690555b50565b600082815260016020819052604090912001546103518133610c45565b61035b8383610ca9565b505050565b6001600160a01b03811633146103d05760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016102ec565b6103da8282610d14565b5050565b60025460ff166104275760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102ec565b653830bab9b2b960d11b61043b8133610c45565b6002805460ff191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a150565b61048e6437bbb732b960d91b33610c45565b6002805461ff0019169055565b6104b06737b832b930ba37b960c11b33610c45565b60025460ff16156104f65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102ec565b6003556002805461ff001916610100179055565b60025460ff16156105505760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102ec565b653830bab9b2b960d11b6105648133610c45565b6002805460ff191660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610471565b600054610100900460ff16806105b65750303b155b806105c4575060005460ff16155b6105e05760405162461bcd60e51b81526004016102ec90610fee565b600054610100900460ff16158015610602576000805461ffff19166101011790555b61060a6102ad565b6005839055600480546001600160a01b0319166001600160a01b038416179055801561035b576000805461ff0019169055505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6004805460055460405163f084b66960e01b815292830152643a37b5b2b760d91b6024830152600091829182916001600160a01b039091169063f084b6699060440160206040518083038186803b1580156106c557600080fd5b505afa1580156106d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fd9190610f2f565b90506000816001600160a01b0316630fc63d106040518163ffffffff1660e01b815260040160206040518083038186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190610f2f565b90506000826001600160a01b0316635f64b55b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107af57600080fd5b505afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190610f2f565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561082457600080fd5b505afa158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c9190610fcd565b60ff1690506000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561089c57600080fd5b505afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190610fcd565b60ff169050600080866001600160a01b0316631a595f656040518163ffffffff1660e01b8152600401604080518083038186803b15801561091457600080fd5b505afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190610faa565b915091506000876001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561098b57600080fd5b505afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c39190610f92565b90506000886001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0057600080fd5b505afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190610fcd565b60ff1690506000610a49868861103c565b610a549060246111a7565b9050600083610a6483600a6110ba565b610a6f8a600a6110ba565b610a799088611188565b610a848a600a6110ba565b610a8e908a611188565b610a98919061103c565b610aa29190611188565b610aac9190611054565b9d60019d509b505050505050505050505050565b60008281526001602081905260409091200154610add8133610c45565b61035b8383610d14565b610af96437bbb732b960d91b33610c45565b610b0b6437bbb732b960d91b82610ca9565b6103316437bbb732b960d91b33610d14565b600054610100900460ff1680610b325750303b155b80610b40575060005460ff16155b610b5c5760405162461bcd60e51b81526004016102ec90610fee565b600054610100900460ff16158015610b7e576000805461ffff19166101011790555b610b996d4b534c504b555344544b5553444360901b836105a1565b80156103da576000805461ff00191690555050565b600054610100900460ff1680610bc35750303b155b80610bd1575060005460ff16155b610bed5760405162461bcd60e51b81526004016102ec90610fee565b600054610100900460ff16158015610c0f576000805461ffff19166101011790555b610c17610d7b565b610c32653830bab9b2b960d11b6437bbb732b960d91b610de4565b61031f653830bab9b2b960d11b33610e31565b610c4f8282610640565b6103da5760405162461bcd60e51b815260206004820152602560248201527f416363657373436f6e74726f6c3a5f636865636b526f6c653a696e76616c696460448201526420726f6c6560d81b60648201526084016102ec565b610cb38282610640565b6103da5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b610d1e8282610640565b156103da5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1680610d905750303b155b80610d9e575060005460ff16155b610dba5760405162461bcd60e51b81526004016102ec90610fee565b600054610100900460ff16158015610ddc576000805461ffff19166101011790555b61031f610e3b565b6000828152600160208190526040808320909101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6103da8282610ca9565b600054610100900460ff1680610e505750303b155b80610e5e575060005460ff16155b610e7a5760405162461bcd60e51b81526004016102ec90610fee565b600054610100900460ff16158015610e9c576000805461ffff19166101011790555b610eae6437bbb732b960d91b33610e31565b610ec86430b236b4b760d91b6437bbb732b960d91b610de4565b610ee56737b832b930ba37b960c11b6437bbb732b960d91b610de4565b610ef76430b236b4b760d91b33610e31565b61031f6737b832b930ba37b960c11b33610e31565b600060208284031215610f1d578081fd5b8135610f28816111d4565b9392505050565b600060208284031215610f40578081fd5b8151610f28816111d4565b600060208284031215610f5c578081fd5b5035919050565b60008060408385031215610f75578081fd5b823591506020830135610f87816111d4565b809150509250929050565b600060208284031215610fa3578081fd5b5051919050565b60008060408385031215610fbc578182fd5b505080516020909101519092909150565b600060208284031215610fde578081fd5b815160ff81168114610f28578182fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561104f5761104f6111be565b500190565b60008261106f57634e487b7160e01b81526012600452602481fd5b500490565b80825b600180861161108657506110b1565b818704821115611098576110986111be565b808616156110a557918102915b9490941c938002611077565b94509492505050565b6000610f2860001984846000826110d357506001610f28565b816110e057506000610f28565b81600181146110f657600281146111005761112d565b6001915050610f28565b60ff841115611111576111116111be565b6001841b915084821115611127576111276111be565b50610f28565b5060208310610133831016604e8410600b8410161715611160575081810a8381111561115b5761115b6111be565b610f28565b61116d8484846001611074565b80860482111561117f5761117f6111be565b02949350505050565b60008160001904831182151516156111a2576111a26111be565b500290565b6000828210156111b9576111b96111be565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461033157600080fdfea2646970667358221220ae312b9b4af8ba9b328af9424a2616de72df3e5dbd2df8de2a143106eacfcf5564736f6c63430008030033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "clear()": {
        "details": "it is should be called by only governance (EOA for now)."
      },
      "getPrice()": {
        "returns": {
          "_0": "value of price, validation check"
        }
      },
      "set(uint256)": {
        "details": "it should be called by only whitelisted operator",
        "params": {
          "_price": "value of price to set"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "clear()": {
        "notice": "make price invalid"
      },
      "getPrice()": {
        "notice": "get price"
      },
      "set(uint256)": {
        "notice": "set price"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23220,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 23223,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 20166,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)20161_storage)"
      },
      {
        "astId": 20556,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "_paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 29379,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "valid",
        "offset": 1,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 29381,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "price",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 28947,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "addressBook",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IAddressBook)6850"
      },
      {
        "astId": 28949,
        "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
        "label": "collateralType",
        "offset": 0,
        "slot": "5",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IAddressBook)6850": {
        "encoding": "inplace",
        "label": "contract IAddressBook",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)20161_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)20161_storage"
      },
      "t_struct(RoleData)20161_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 20158,
            "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20160,
            "contract": "contracts/collateral/KSLPKUSDTKUSDC/BKSLPKUSDTKUSDCFeed.sol:BKSLPKUSDTKUSDCFeed",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}