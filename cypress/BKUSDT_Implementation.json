{
  "address": "0x707C05d51F4E2AF4c3A9CB9C3384947325C560EE",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__BKUSDT_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "name": "__BaseBond_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "what",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "data",
          "type": "address"
        }
      ],
      "name": "config",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "fromTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "safeTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "name": "toTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IKIP7",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yieldFactory",
      "outputs": [
        {
          "internalType": "contract IYieldFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc65a1914463ad1da5a7ba061c8a6a6c95de91c08abc3388f93419cc518d508fd",
  "receipt": {
    "to": null,
    "from": "0x276199434a04b2607D5E95670e5cB6a7E7f10f3d",
    "contractAddress": "0x707C05d51F4E2AF4c3A9CB9C3384947325C560EE",
    "transactionIndex": 5,
    "gasUsed": "2544985",
    "logsBloom": "0x
    "blockHash": "0x225e1360b047cc448c3c7fbbd21d90ab7a3b296cfbe797db2d2eef9d69a984c0",
    "transactionHash": "0xc65a1914463ad1da5a7ba061c8a6a6c95de91c08abc3388f93419cc518d508fd",
    "logs": [],
    "blockNumber": 79377032,
    "cumulativeGasUsed": null,
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e831a5bfc8ef039172564e394c8a43c3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__BKUSDT_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"__BaseBond_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"config\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"fromTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"toTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IKIP7\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldFactory\",\"outputs\":[{\"internalType\":\"contract IYieldFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fromTokenAmount(uint256)\":{\"notice\":\"Calculate bond amount corresponding to the given token amount\"},\"stake(address,uint256)\":{\"notice\":\"Stake token to this contract and return bond.\"},\"toTokenAmount(uint256)\":{\"notice\":\"Calculate token amount corresponding to the given bond amount\"},\"unstake(address,uint256)\":{\"notice\":\"Untake to return staked token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/collateral/KUSDT/BKUSDT.sol\":\"BKUSDT\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/collateral/KUSDT/BKUSDT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\nimport \\\"../../lending/bond/BaseBond.sol\\\";\\n\\ncontract BKUSDT is BaseBond {\\n    function __BKUSDT_init() public initializer {\\n        __BaseBond_init(\\\"bonded KUSDT\\\", \\\"bKUSDT\\\", 6);\\n    }\\n}\\n\",\"keccak256\":\"0xd934366915106c392b6033ff26f423eb396be682a6b2fe23fcfb125695971aca\",\"license\":\"MIT\"},\"contracts/interface/IBond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\nimport \\\"./kip/IKIP7Extended.sol\\\";\\n\\n/// @title Bonded Collateral Contract\\n/// @notice Mint/Burn logic of Bond\\ninterface IBond is IKIP7Extended {\\n    event Stake(address from, address to, uint256 tokenAmount, uint256 bondAmount);\\n    event Unstake(address from, address to, uint256 tokenAmount, uint256 bondAmount);\\n\\n    /// @notice Calculate bond amount corresponding to the given token amount\\n    function fromTokenAmount(uint256 tokenAmount) external view returns (uint256 bondAmount);\\n\\n    /// @notice Calculate token amount corresponding to the given bond amount\\n    function toTokenAmount(uint256 bondAmount) external view returns (uint256 tokenAmount);\\n\\n    /// @notice Stake token to this contract and return bond.\\n    function stake(address to, uint256 tokenAmount) external returns (uint256 bondAmount);\\n\\n    /// @notice Untake to return staked token.\\n    function unstake(address to, uint256 bondAmount) external returns (uint256 tokenAmount);\\n}\\n\",\"keccak256\":\"0x37f0de875521a4ea18dba309d70e9d2f9be8310f79ddd6cfe203dc8511664144\",\"license\":\"MIT\"},\"contracts/interface/IYieldFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\ninterface IYieldFactory {\\n    function token() external view returns (address);\\n\\n    function totalValue() external view returns (uint256);\\n\\n    function totalAmount() external view returns (uint256);\\n\\n    /// @notice Add collateral to staking yield\\n    /// @param tokenAmount Amount of token to stake\\n    function stake(uint256 tokenAmount) external;\\n\\n    /// @notice Remove token from yield.\\n    /// @param tokenAmount Amount of token to unstake\\n    function unstake(uint256 tokenAmount) external;\\n\\n    /// @notice In all yields, call claimReward function.\\n    function applyProfitAll() external;\\n}\\n\",\"keccak256\":\"0x5b7493e5b8d178aa9d13974c23bc7312cd63ba3ff4bed1e72f6c6c9070f7cb8d\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\ninterface IKIP13 {\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x651958b745058d476a41ab467d508d2fe6c131d83cdbe9dfe28b3893d32c48fd\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IKIP13.sol\\\";\\n\\ninterface IKIP7 is IKIP13 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function safeTransfer(\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function safeTransfer(address recipient, uint256 amount) external;\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6fb8afaff38611db93f55c13447c08ea47e5392b895a75bf43999808176528e0\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IKIP7.sol\\\";\\n\\ninterface IKIP7Detailed is IKIP7 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xb19fcc63818f59c23defe41b45aa9235cd43a373d97fe222fc939ad3f0f697c9\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7Extended.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IKIP7.sol\\\";\\nimport \\\"./IKIP7Detailed.sol\\\";\\nimport \\\"./IKIP13.sol\\\";\\n\\ninterface IKIP7Extended is IKIP7Detailed {\\n    function mint(address usr, uint256 amount) external returns (bool);\\n\\n    function burn(address usr, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x68ea4321698aef5d82970660626d6e07ea4908b0b94bee9d6ceb2f8776c6c06b\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\ninterface IKIP7Receiver {\\n    function onKIP7Received(\\n        address _operator,\\n        address _from,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x28382ebf22d533d01fb1385a4a598f98769ed91e657208711ba5797a1509d261\",\"license\":\"MIT\"},\"contracts/lending/bond/BaseBond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\nimport \\\"../../library/kip/KIP7Extended.sol\\\";\\nimport \\\"../../library/openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"../../library/openzeppelin/contracts/utils/Math.sol\\\";\\nimport \\\"../../interface/IBond.sol\\\";\\nimport \\\"../../interface/IYieldFactory.sol\\\";\\n\\ncontract BaseBond is IBond, KIP7Extended {\\n    // --- data ---\\n    IYieldFactory public yieldFactory;\\n    IKIP7 public token;\\n\\n    function __BaseBond_init(\\n        string memory name_,\\n        string memory symbol_,\\n        uint8 decimals_\\n    ) public initializer {\\n        __KIP7Extended_init(name_, symbol_, decimals_);\\n        __Pausable_init();\\n    }\\n\\n    function config(bytes32 what, address data) external onlyAdmin whenNotPaused {\\n        if (what == \\\"yieldFactory\\\") yieldFactory = IYieldFactory(data);\\n        else if (what == \\\"token\\\") token = IKIP7(data);\\n        else revert(\\\"BaseBond::config: unrecognized-param\\\");\\n    }\\n\\n    function fromTokenAmount(uint256 tokenAmount) public view override returns (uint256 bondAmount) {\\n        uint256 totalAmount = yieldFactory.totalAmount();\\n        if (totalAmount <= 0) {\\n            bondAmount = tokenAmount;\\n        } else {\\n            bondAmount = (tokenAmount * _totalSupply) / totalAmount;\\n        }\\n    }\\n\\n    function toTokenAmount(uint256 bondAmount) public view override returns (uint256 tokenAmount) {\\n        uint256 totalAmount = yieldFactory.totalAmount();\\n        if (totalAmount <= 0) {\\n            tokenAmount = bondAmount;\\n        } else {\\n            tokenAmount = (bondAmount * totalAmount) / _totalSupply;\\n        }\\n    }\\n\\n    function stake(address to, uint256 tokenAmount) external override whenNotPaused returns (uint256 bondAmount) {\\n        if (tokenAmount <= 0) {\\n            return 0;\\n        }\\n        bondAmount = fromTokenAmount(tokenAmount);\\n        _mint(to, bondAmount);\\n        token.transferFrom(msg.sender, address(this), tokenAmount);\\n        token.approve(address(yieldFactory), tokenAmount);\\n        yieldFactory.stake(tokenAmount);\\n\\n        emit Stake(msg.sender, to, tokenAmount, bondAmount);\\n    }\\n\\n    function unstake(address to, uint256 bondAmount) external override whenNotPaused returns (uint256 tokenAmount) {\\n        if (bondAmount <= 0) {\\n            return 0;\\n        }\\n        tokenAmount = toTokenAmount(bondAmount);\\n        _burn(msg.sender, bondAmount);\\n        yieldFactory.unstake(tokenAmount);\\n        token.transfer(to, tokenAmount);\\n\\n        emit Unstake(msg.sender, to, tokenAmount, bondAmount);\\n    }\\n}\\n\",\"keccak256\":\"0xe59769c745d4161ca34bb6fd377f52d82795898cf41e3666feada947934ab930\",\"license\":\"MIT\"},\"contracts/library/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./openzeppelin/proxy/Initializable.sol\\\";\\n\\ncontract AccessControl is Initializable {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        _checkRole(bytes32(\\\"owner\\\"), msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        _checkRole(bytes32(\\\"admin\\\"), msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyOperator() {\\n        _checkRole(bytes32(\\\"operator\\\"), msg.sender);\\n        _;\\n    }\\n\\n    function __AccessControl_init() internal initializer {\\n        __AccessControl_init_unchained();\\n    }\\n\\n    function __AccessControl_init_unchained() private initializer {\\n        _setupRole(bytes32(\\\"owner\\\"), msg.sender);\\n        _setRoleAdmin(bytes32(\\\"admin\\\"), bytes32(\\\"owner\\\"));\\n        _setRoleAdmin(bytes32(\\\"operator\\\"), bytes32(\\\"owner\\\"));\\n        _setupRole(bytes32(\\\"admin\\\"), msg.sender);\\n        _setupRole(bytes32(\\\"operator\\\"), msg.sender);\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    function _checkRole(bytes32 role, address account) internal view {\\n        if (!hasRole(role, account)) {\\n            revert(\\\"AccessControl:_checkRole:invalid role\\\");\\n        }\\n    }\\n\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    function grantRole(bytes32 role, address account) public onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    function revokeRole(bytes32 role, address account) public onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    function renounceRole(bytes32 role, address account) public {\\n        require(account == msg.sender, \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    function _setupRole(bytes32 role, address account) internal {\\n        _grantRole(role, account);\\n    }\\n\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, msg.sender);\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, msg.sender);\\n        }\\n    }\\n\\n    // --- ownable --\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _grantRole(bytes32(\\\"owner\\\"), newOwner);\\n        _revokeRole(bytes32(\\\"owner\\\"), msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x16d2c3697b545ce0f8f6508d64eef0522b972736cbe77fc7c2e7e50a348f94b8\",\"license\":\"MIT\"},\"contracts/library/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AccessControl.sol\\\";\\n\\nabstract contract Pausable is AccessControl {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    function __Pausable_init() internal initializer {\\n        __AccessControl_init();\\n        _setRoleAdmin(bytes32(\\\"pauser\\\"), bytes32(\\\"owner\\\"));\\n        _setupRole(bytes32(\\\"pauser\\\"), msg.sender);\\n    }\\n\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    modifier whenNotPaused() virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    function pause() public whenNotPaused onlyRole(\\\"pauser\\\") {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    function unpause() public whenPaused onlyRole(\\\"pauser\\\") {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x09830075c06c05d623c2db6ce3f84b495181ab439043cdaab714060b9fc23f5a\",\"license\":\"MIT\"},\"contracts/library/kip/KIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"../../interface/kip/IKIP13.sol\\\";\\nimport \\\"../openzeppelin/proxy/Initializable.sol\\\";\\n\\ncontract KIP13 is Initializable, IKIP13 {\\n    bytes4 private constant _INTERFACE_ID_KIP13 = 0x01ffc9a7;\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    function __KIP13_init() internal initializer {\\n        _registerInterface(_INTERFACE_ID_KIP13);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    function _registerInterface(bytes4 interfaceId) internal {\\n        require(interfaceId != 0xffffffff, \\\"KIP13::_registerInterface: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\\n\",\"keccak256\":\"0xb258571d866799d24f0334192c74b12c90462a1838e7478d5ae9855fef40b8cf\",\"license\":\"MIT\"},\"contracts/library/kip/KIP7.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"../openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"../openzeppelin/proxy/Initializable.sol\\\";\\nimport \\\"../../interface/kip/IKIP7.sol\\\";\\nimport \\\"../../interface/kip/IKIP7Receiver.sol\\\";\\nimport \\\"./KIP13.sol\\\";\\n\\ncontract KIP7 is KIP13, IKIP7 {\\n    using Address for address;\\n\\n    bytes4 private constant _KIP7_RECEIVED = 0x9d188c22;\\n\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _totalSupply;\\n\\n    bytes4 private constant _INTERFACE_ID_KIP7 = 0x65787371;\\n\\n    function __KIP7_init() internal initializer {\\n        __KIP13_init();\\n        __KIP7_init_unchained();\\n    }\\n\\n    function __KIP7_init_unchained() private initializer {\\n        _registerInterface(_INTERFACE_ID_KIP7);\\n    }\\n\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\\n        return true;\\n    }\\n\\n    function safeTransfer(address recipient, uint256 amount) public virtual override {\\n        safeTransfer(recipient, amount, \\\"\\\");\\n    }\\n\\n    function safeTransfer(\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        transfer(recipient, amount);\\n        require(_checkOnKIP7Received(msg.sender, recipient, amount, data), \\\"KIP7::safeTransfer: transfer to non KIP7Receiver implementer\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override {\\n        safeTransferFrom(sender, recipient, amount, \\\"\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        transferFrom(sender, recipient, amount);\\n        require(_checkOnKIP7Received(sender, recipient, amount, data), \\\"KIP7::safeTransferFrom: transfer to non KIP7Receiver implementer\\\");\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"KIP7::_transfer: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"KIP7::_transfer: transfer to the zero address\\\");\\n        _balances[sender] = _balances[sender] - amount;\\n        _balances[recipient] = _balances[recipient] + amount;\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(owner != address(0), \\\"KIP7::_approve: approve from the zero address\\\");\\n        require(spender != address(0), \\\"KIP7::_approve: approve to the zero address\\\");\\n        _allowances[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function _checkOnKIP7Received(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes memory _data\\n    ) internal returns (bool) {\\n        if (!recipient.isContract()) {\\n            return true;\\n        }\\n\\n        bytes4 retval = IKIP7Receiver(recipient).onKIP7Received(msg.sender, sender, amount, _data);\\n        return (retval == _KIP7_RECEIVED);\\n    }\\n}\\n\",\"keccak256\":\"0x521bfda25e27804fa98e9e4ecc3ecd02dda2d4adc807fba29749fddbe30c215c\",\"license\":\"MIT\"},\"contracts/library/kip/KIP7Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\nimport \\\"../openzeppelin/proxy/Initializable.sol\\\";\\nimport \\\"../../interface/kip/IKIP7Detailed.sol\\\";\\nimport \\\"./KIP7.sol\\\";\\n\\ncontract KIP7Detailed is KIP7, IKIP7Detailed {\\n    string internal _name;\\n    string internal _symbol;\\n    uint8 internal _decimals;\\n\\n    bytes4 private constant INTERFACE_ID_KIP7_METADATA = 0xa219a025;\\n\\n    function __KIP7Detailed_init(\\n        string memory name_,\\n        string memory symbol_,\\n        uint8 decimals_\\n    ) internal initializer {\\n        __KIP7_init();\\n        __KIP7Detailed_init_unchained(name_, symbol_, decimals_);\\n    }\\n\\n    function __KIP7Detailed_init_unchained(\\n        string memory name_,\\n        string memory symbol_,\\n        uint8 decimals_\\n    ) private initializer {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = decimals_;\\n        _registerInterface(INTERFACE_ID_KIP7_METADATA);\\n    }\\n\\n    function name() public view override returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public view override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function decimals() public view override returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0x601577a4c26b7675999a2eb07e99c4b59f82b0faa5a15202be72f4a49366c1e0\",\"license\":\"MIT\"},\"contracts/library/kip/KIP7Extended.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"../openzeppelin/proxy/Initializable.sol\\\";\\nimport \\\"../AccessControl.sol\\\";\\nimport \\\"../../interface/kip/IKIP7Extended.sol\\\";\\nimport \\\"./KIP7Detailed.sol\\\";\\nimport \\\"../Pausable.sol\\\";\\n\\ncontract KIP7Extended is KIP7Detailed, IKIP7Extended, AccessControl, Pausable {\\n    function __KIP7Extended_init(\\n        string memory name_,\\n        string memory symbol_,\\n        uint8 decimals_\\n    ) internal initializer {\\n        __KIP7Detailed_init(name_, symbol_, decimals_);\\n        __Pausable_init();\\n    }\\n\\n    function __KIP7Extended_init_unchained() private initializer {}\\n\\n    function mint(address account, uint256 amount) public override onlyAdmin whenNotPaused returns (bool) {\\n        _mint(account, amount);\\n        return true;\\n    }\\n\\n    function burn(address account, uint256 value) public override onlyAdmin whenNotPaused returns (bool) {\\n        _burn(account, value);\\n        return true;\\n    }\\n\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"KIP7Extended::_mint: mint to the zero address\\\");\\n        _totalSupply = _totalSupply + amount;\\n        _balances[account] = _balances[account] + amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0), \\\"KIP7Extended::_burn: burn from the zero address\\\");\\n        _totalSupply = _totalSupply - value;\\n        _balances[account] = _balances[account] - value;\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public virtual override(KIP7, IKIP7) whenNotPaused returns (bool) {\\n        return super.transfer(recipient, amount);\\n    }\\n\\n    function approve(address spender, uint256 value) public virtual override(KIP7, IKIP7) whenNotPaused returns (bool) {\\n        return super.approve(spender, value);\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override(KIP7, IKIP7) whenNotPaused returns (bool) {\\n        return super.transferFrom(sender, recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0b4df65f2019becfdb64e87f3d81feadf14a22c2e8988b1c9532713d74bc9d05\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    // -- Kokoa --\\n    // extended\\n\\n    function add(uint256 x, int256 y) internal pure returns (uint256 z) {\\n        unchecked {\\n            z = x + uint256(y);\\n            require(y >= 0 || z <= x, \\\"SafeMath: addition overflow\\\");\\n            require(y <= 0 || z >= x, \\\"SafeMath: addition overflow\\\");\\n        }\\n    }\\n\\n    function sub(uint256 x, int256 y) internal pure returns (uint256 z) {\\n        unchecked {\\n            z = x - uint256(y);\\n            require(y <= 0 || z <= x, \\\"SafeMath: subtraction overflow\\\");\\n            require(y >= 0 || z >= x, \\\"SafeMath: subtraction overflow\\\");\\n        }\\n    }\\n\\n    function mul(uint256 x, int256 y) internal pure returns (int256 z) {\\n        unchecked {\\n            z = int256(x) * y;\\n            require(int256(x) >= 0, \\\"SafeMath: multiplication overflow\\\");\\n            require(y == 0 || z / y == int256(x), \\\"SafeMath: multiplication overflow\\\");\\n        }\\n    }\\n\\n    function mul(int256 x, uint256 y) internal pure returns (int256 z) {\\n        z = x * int256(y);\\n        require(int256(y) >= 0, \\\"SafeMath: multiplication overflow\\\");\\n        require(x == 0 || z / x == int256(y), \\\"SafeMath: multiplication overflow\\\");\\n    }\\n\\n    // -- makerdao --\\n    // extended\\n    uint256 constant ONE = 10**27;\\n    uint256 constant RAY = 10**27;\\n    uint256 constant WAD = 10**18;\\n\\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * RAY;\\n        z = z / y;\\n    }\\n\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * y;\\n        require(y == 0 || z / y == x, \\\"SafeMath:: rmul: overflow\\\");\\n        z = z / RAY;\\n    }\\n\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * y;\\n        require(y == 0 || z / y == x, \\\"SafeMath:: wmul: overflow\\\");\\n        z = z / WAD;\\n    }\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x <= y ? x : y;\\n    }\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x >= y ? x : y;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n\\n    // from uniswap\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\\n        z = y;\\n        uint256 x = y / 2 + 1;\\n        while (x < z) {\\n            z = x;\\n            x = (y / x + x) / 2;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc470c98add15d467271436b0ab2d99fc66a45f32d0ddd93d58436b74962b0f79\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\n/**\\n * @dev Collection of functions related to the address type,\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * This test is non-exhaustive, and there may be false-negatives: during the\\n     * execution of a contract's constructor, its address will be reported as\\n     * not containing a contract.\\n     *\\n     * > It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x61c683ae2ea61903ccc65eb60878b7ab1f1513412221dcbdca4178fceddd45fe\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/contracts/utils/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    function add(uint256 x, int256 y) internal pure returns (uint256 z) {\\n        unchecked {\\n            z = x + uint256(y);\\n            require(y >= 0 || z <= x, \\\"Math: addition overflow\\\");\\n            require(y <= 0 || z >= x, \\\"Math: addition overflow\\\");\\n        }\\n    }\\n\\n    function sub(uint256 x, int256 y) internal pure returns (uint256 z) {\\n        unchecked {\\n            z = x - uint256(y);\\n            require(y <= 0 || z <= x, \\\"Math: subtraction overflow\\\");\\n            require(y >= 0 || z >= x, \\\"Math: subtraction overflow\\\");\\n        }\\n    }\\n\\n    function mul(uint256 x, int256 y) internal pure returns (int256 z) {\\n        unchecked {\\n            z = int256(x) * y;\\n            require(int256(x) >= 0, \\\"Math: multiplication overflow\\\");\\n            require(y == 0 || z / y == int256(x), \\\"Math: multiplication overflow\\\");\\n        }\\n    }\\n\\n    function mul(int256 x, uint256 y) internal pure returns (int256 z) {\\n        z = x * int256(y);\\n        require(int256(y) >= 0, \\\"Math: multiplication overflow\\\");\\n        require(x == 0 || z / x == int256(y), \\\"Math: multiplication overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n\\n    // from uniswap\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\\n        z = y;\\n        uint256 x = y / 2 + 1;\\n        while (x < z) {\\n            z = x;\\n            x = (y / x + x) / 2;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd94cce7a88a43ad7e95b468dbd59a18e62f95be8b23a1619e0b96bfc1246eae1\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.3;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        // extcodesize checks the size of the code stored in an address, and\\n        // address returns the current address. Since the code is still not\\n        // deployed when running a constructor, any checks on its code size will\\n        // yield zero, making it an effective way to detect if a contract is\\n        // under construction or not.\\n        address self = address(this);\\n        uint256 cs;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            cs := extcodesize(self)\\n        }\\n        return cs == 0;\\n    }\\n}\\n\",\"keccak256\":\"0x95a413b1c4dc23bacf1a16b826a929f2ff756835e3ff3018aeff63afd497886f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612478806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80637214956f11610125578063adc9772e116100ad578063d547741f1161007c578063d547741f14610472578063dd62ed3e14610485578063eb795549146104be578063f2fde38b146104d1578063fc0c546a146104e457610211565b8063adc9772e14610426578063b88d4fde14610439578063c2a672e01461044c578063d366f3b91461045f57610211565b806391d14854116100f457806391d14854146103dd57806395d89b41146103f05780639dc29fac146103f8578063a217fddf1461040b578063a9059cbb1461041357610211565b80637214956f146103a75780637f1c942d146103ba5780638142b9f2146103cd5780638456cb59146103d557610211565b80632f2ff15d116101a857806340c10f191161017757806340c10f191461033a578063423f6cef1461034d57806342842e0e146103605780635c975abb1461037357806370a082311461037e57610211565b80632f2ff15d146102f5578063313ce5671461030a57806336568abe1461031f5780633f4ba83a1461033257610211565b8063174e4ea6116101e4578063174e4ea61461029657806318160ddd146102b757806323b872dd146102bf578063248a9ca3146102d257610211565b806301ffc9a71461021657806306fdde031461023e578063095ea7b31461025357806316fd84f714610266575b600080fd5b610229610224366004612180565b6104f7565b60405190151581526020015b60405180910390f35b61024661051a565b60405161023591906122d2565b6102296102613660046120a1565b6105ac565b60095461027e9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610235565b6102a96102a4366004612146565b6105f3565b604051908152602001610235565b6004546102a9565b6102296102cd366004612000565b6106ae565b6102a96102e0366004612146565b60009081526008602052604090206001015490565b61030861030336600461215e565b6106ec565b005b60075460405160ff9091168152602001610235565b61030861032d36600461215e565b610717565b610308610795565b6102296103483660046120a1565b610833565b61030861035b3660046120a1565b61087d565b61030861036e366004612000565b610897565b60095460ff16610229565b6102a961038c366004611fb4565b6001600160a01b031660009081526002602052604090205490565b6102a96103b5366004612146565b6108b2565b6103086103c83660046121b8565b61095c565b6103086109e8565b610308610aac565b6102296103eb36600461215e565b610b20565b610246610b4b565b6102296104063660046120a1565b610b5a565b6102a9600081565b6102296104213660046120a1565b610b9b565b6102a96104343660046120a1565b610bd0565b61030861044736600461203b565b610df3565b6102a961045a3660046120a1565b610e7f565b61030861046d36600461215e565b611005565b61030861048036600461215e565b6110fa565b6102a9610493366004611fce565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6103086104cc3660046120ca565b611120565b6103086104df366004611fb4565b6111a9565b600a5461027e906001600160a01b031681565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b606060058054610529906123cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610555906123cb565b80156105a25780601f10610577576101008083540402835291602001916105a2565b820191906000526020600020905b81548152906001019060200180831161058557829003601f168201915b5050505050905090565b60006105ba60095460ff1690565b156105e05760405162461bcd60e51b81526004016105d7906122e5565b60405180910390fd5b6105ea83836111df565b90505b92915050565b600080600960019054906101000a90046001600160a01b03166001600160a01b0316631a39d8ef6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190612232565b90506000811161068e578291506106a8565b60045461069b8285612395565b6106a59190612375565b91505b50919050565b60006106bc60095460ff1690565b156106d95760405162461bcd60e51b81526004016105d7906122e5565b6106e48484846111ec565b949350505050565b600082815260086020526040902060010154610708813361123e565b61071283836112a2565b505050565b6001600160a01b03811633146107875760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016105d7565b610791828261130b565b5050565b60095460ff166107de5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105d7565b653830bab9b2b960d11b6107f2813361123e565b6009805460ff191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a150565b60006108476430b236b4b760d91b3361123e565b60095460ff161561086a5760405162461bcd60e51b81526004016105d7906122e5565b6108748383611372565b50600192915050565b610791828260405180602001604052806000815250611120565b61071283838360405180602001604052806000815250610df3565b600080600960019054906101000a90046001600160a01b03166001600160a01b0316631a39d8ef6040518163ffffffff1660e01b815260040160206040518083038186803b15801561090357600080fd5b505afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190612232565b90506000811161094d578291506106a8565b806004548461069b9190612395565b600054610100900460ff16806109715750303b155b8061097f575060005460ff16155b61099b5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff161580156109bd576000805461ffff19166101011790555b6109c8848484611470565b6109d06114dc565b80156109e2576000805461ff00191690555b50505050565b600054610100900460ff16806109fd5750303b155b80610a0b575060005460ff16155b610a275760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015610a49576000805461ffff19166101011790555b610a976040518060400160405280600c81526020016b189bdb9919590812d554d11560a21b815250604051806040016040528060068152602001651892d554d11560d21b815250600661095c565b8015610aa9576000805461ff00191690555b50565b60095460ff1615610acf5760405162461bcd60e51b81526004016105d7906122e5565b653830bab9b2b960d11b610ae3813361123e565b6009805460ff191660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610828565b60009182526008602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060068054610529906123cb565b6000610b6e6430b236b4b760d91b3361123e565b60095460ff1615610b915760405162461bcd60e51b81526004016105d7906122e5565b6108748383611573565b6000610ba960095460ff1690565b15610bc65760405162461bcd60e51b81526004016105d7906122e5565b6105ea8383611664565b6000610bde60095460ff1690565b15610bfb5760405162461bcd60e51b81526004016105d7906122e5565b60008211610c0b575060006105ed565b610c14826108b2565b9050610c208382611372565b600a546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610c7257600080fd5b505af1158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caa919061211f565b50600a5460095460405163095ea7b360e01b81526001600160a01b03610100909204821660048201526024810185905291169063095ea7b390604401602060405180830381600087803b158015610d0057600080fd5b505af1158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d38919061211f565b5060095460405163534a7e1d60e11b8152600481018490526101009091046001600160a01b03169063a694fc3a90602401600060405180830381600087803b158015610d8357600080fd5b505af1158015610d97573d6000803e3d6000fd5b5050604080513381526001600160a01b0387166020820152908101859052606081018490527f63602d0ecc7b3a0ef7ff1a116e23056662d64280355ba8031b6d0d767c4b4458925060800190505b60405180910390a192915050565b610dfe8484846106ae565b50610e0b84848484611671565b6109e2576040805162461bcd60e51b81526020600482015260248101919091527f4b4950373a3a736166655472616e7366657246726f6d3a207472616e7366657260448201527f20746f206e6f6e204b495037526563656976657220696d706c656d656e74657260648201526084016105d7565b6000610e8d60095460ff1690565b15610eaa5760405162461bcd60e51b81526004016105d7906122e5565b60008211610eba575060006105ed565b610ec3826105f3565b9050610ecf3383611573565b6009546040516305c2fbcf60e31b8152600481018390526101009091046001600160a01b031690632e17de7890602401600060405180830381600087803b158015610f1957600080fd5b505af1158015610f2d573d6000803e3d6000fd5b5050600a5460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201869052909116925063a9059cbb9150604401602060405180830381600087803b158015610f7f57600080fd5b505af1158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb7919061211f565b50604080513381526001600160a01b0385166020820152908101829052606081018390527f18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef90608001610de5565b6110176430b236b4b760d91b3361123e565b60095460ff161561103a5760405162461bcd60e51b81526004016105d7906122e5565b816b7969656c64466163746f727960a01b14156110765760098054610100600160a81b0319166101006001600160a01b03841602179055610791565b81643a37b5b2b760d91b14156110a657600a80546001600160a01b0319166001600160a01b038316179055610791565b60405162461bcd60e51b8152602060048201526024808201527f42617365426f6e643a3a636f6e6669673a20756e7265636f676e697a65642d706044820152636172616d60e01b60648201526084016105d7565b600082815260086020526040902060010154611116813361123e565b610712838361130b565b61112a8383610b9b565b5061113733848484611671565b6107125760405162461bcd60e51b815260206004820152603c60248201527f4b4950373a3a736166655472616e736665723a207472616e7366657220746f2060448201527f6e6f6e204b495037526563656976657220696d706c656d656e7465720000000060648201526084016105d7565b6111bb6437bbb732b960d91b3361123e565b6111cd6437bbb732b960d91b826112a2565b610aa96437bbb732b960d91b3361130b565b600061087433848461172f565b60006111f9848484611867565b6001600160a01b03841660009081526003602090815260408083203380855292529091205461123491869161122f9086906123b4565b61172f565b5060019392505050565b6112488282610b20565b6107915760405162461bcd60e51b815260206004820152602560248201527f416363657373436f6e74726f6c3a5f636865636b526f6c653a696e76616c696460448201526420726f6c6560d81b60648201526084016105d7565b6112ac8282610b20565b6107915760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6113158282610b20565b156107915760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0382166113de5760405162461bcd60e51b815260206004820152602d60248201527f4b495037457874656e6465643a3a5f6d696e743a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b60648201526084016105d7565b806004546113ec919061235d565b6004556001600160a01b03821660009081526002602052604090205461141390829061235d565b6001600160a01b0383166000818152600260205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114649085815260200190565b60405180910390a35050565b600054610100900460ff16806114855750303b155b80611493575060005460ff16155b6114af5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff161580156114d1576000805461ffff19166101011790555b6109c88484846119e9565b600054610100900460ff16806114f15750303b155b806114ff575060005460ff16155b61151b5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff1615801561153d576000805461ffff19166101011790555b611545611a5d565b611560653830bab9b2b960d11b6437bbb732b960d91b611ac6565b610a97653830bab9b2b960d11b33611b11565b6001600160a01b0382166115e15760405162461bcd60e51b815260206004820152602f60248201527f4b495037457874656e6465643a3a5f6275726e3a206275726e2066726f6d207460448201526e6865207a65726f206164647265737360881b60648201526084016105d7565b806004546115ef91906123b4565b6004556001600160a01b0382166000908152600260205260409020546116169082906123b4565b6001600160a01b0383166000818152600260205260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114649085815260200190565b6000610874338484611867565b60006001600160a01b0384163b61168a575060016106e4565b604051634e8c461160e11b81526000906001600160a01b03861690639d188c22906116bf9033908a9089908990600401612295565b602060405180830381600087803b1580156116d957600080fd5b505af11580156116ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611711919061219c565b6001600160e01b031916634e8c461160e11b14915050949350505050565b6001600160a01b03831661179b5760405162461bcd60e51b815260206004820152602d60248201527f4b4950373a3a5f617070726f76653a20617070726f76652066726f6d2074686560448201526c207a65726f206164647265737360981b60648201526084016105d7565b6001600160a01b0382166118055760405162461bcd60e51b815260206004820152602b60248201527f4b4950373a3a5f617070726f76653a20617070726f766520746f20746865207a60448201526a65726f206164647265737360a81b60648201526084016105d7565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166118d55760405162461bcd60e51b815260206004820152602f60248201527f4b4950373a3a5f7472616e736665723a207472616e736665722066726f6d207460448201526e6865207a65726f206164647265737360881b60648201526084016105d7565b6001600160a01b0382166119415760405162461bcd60e51b815260206004820152602d60248201527f4b4950373a3a5f7472616e736665723a207472616e7366657220746f2074686560448201526c207a65726f206164647265737360981b60648201526084016105d7565b6001600160a01b0383166000908152600260205260409020546119659082906123b4565b6001600160a01b03808516600090815260026020526040808220939093559084168152205461199590829061235d565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061185a9085815260200190565b600054610100900460ff16806119fe5750303b155b80611a0c575060005460ff16155b611a285760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611a4a576000805461ffff19166101011790555b611a52611b1b565b6109d0848484611b8c565b600054610100900460ff1680611a725750303b155b80611a80575060005460ff16155b611a9c5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611abe576000805461ffff19166101011790555b610a97611c34565b600082815260086020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61079182826112a2565b600054610100900460ff1680611b305750303b155b80611b3e575060005460ff16155b611b5a5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611b7c576000805461ffff19166101011790555b611b84611d05565b610a97611d76565b600054610100900460ff1680611ba15750303b155b80611baf575060005460ff16155b611bcb5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611bed576000805461ffff19166101011790555b8351611c00906005906020870190611e7d565b508251611c14906006906020860190611e7d565b506007805460ff191660ff84161790556109d063a219a02560e01b611de3565b600054610100900460ff1680611c495750303b155b80611c57575060005460ff16155b611c735760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611c95576000805461ffff19166101011790555b611ca76437bbb732b960d91b33611b11565b611cc16430b236b4b760d91b6437bbb732b960d91b611ac6565b611cde6737b832b930ba37b960c11b6437bbb732b960d91b611ac6565b611cf06430b236b4b760d91b33611b11565b610a976737b832b930ba37b960c11b33611b11565b600054610100900460ff1680611d1a5750303b155b80611d28575060005460ff16155b611d445760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611d66576000805461ffff19166101011790555b610a976301ffc9a760e01b611de3565b600054610100900460ff1680611d8b5750303b155b80611d99575060005460ff16155b611db55760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611dd7576000805461ffff19166101011790555b610a97636578737160e01b5b6001600160e01b03198082161415611e555760405162461bcd60e51b815260206004820152602f60248201527f4b495031333a3a5f7265676973746572496e746572666163653a20696e76616c60448201526e1a59081a5b9d195c999858d9481a59608a1b60648201526084016105d7565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b828054611e89906123cb565b90600052602060002090601f016020900481019282611eab5760008555611ef1565b82601f10611ec457805160ff1916838001178555611ef1565b82800160010185558215611ef1579182015b82811115611ef1578251825591602001919060010190611ed6565b50611efd929150611f01565b5090565b5b80821115611efd5760008155600101611f02565b80356001600160a01b038116811461051557600080fd5b600082601f830112611f3d578081fd5b813567ffffffffffffffff80821115611f5857611f58612416565b604051601f8301601f19908116603f01168101908282118183101715611f8057611f80612416565b81604052838152866020858801011115611f98578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611fc5578081fd5b6105ea82611f16565b60008060408385031215611fe0578081fd5b611fe983611f16565b9150611ff760208401611f16565b90509250929050565b600080600060608486031215612014578081fd5b61201d84611f16565b925061202b60208501611f16565b9150604084013590509250925092565b60008060008060808587031215612050578081fd5b61205985611f16565b935061206760208601611f16565b925060408501359150606085013567ffffffffffffffff811115612089578182fd5b61209587828801611f2d565b91505092959194509250565b600080604083850312156120b3578182fd5b6120bc83611f16565b946020939093013593505050565b6000806000606084860312156120de578283fd5b6120e784611f16565b925060208401359150604084013567ffffffffffffffff811115612109578182fd5b61211586828701611f2d565b9150509250925092565b600060208284031215612130578081fd5b8151801515811461213f578182fd5b9392505050565b600060208284031215612157578081fd5b5035919050565b60008060408385031215612170578182fd5b82359150611ff760208401611f16565b600060208284031215612191578081fd5b813561213f8161242c565b6000602082840312156121ad578081fd5b815161213f8161242c565b6000806000606084860312156121cc578283fd5b833567ffffffffffffffff808211156121e3578485fd5b6121ef87838801611f2d565b94506020860135915080821115612204578384fd5b5061221186828701611f2d565b925050604084013560ff81168114612227578182fd5b809150509250925092565b600060208284031215612243578081fd5b5051919050565b60008151808452815b8181101561226f57602081850181015186830182015201612253565b818111156122805782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122c89083018461224a565b9695505050505050565b6000602082526105ea602083018461224a565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561237057612370612400565b500190565b60008261239057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156123af576123af612400565b500290565b6000828210156123c6576123c6612400565b500390565b600181811c908216806123df57607f821691505b602082108114156106a857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610aa957600080fdfea264697066735822122021bd3016cfeb0d8df07f0d45da80cc29f3127f2139cddc68e590f5c63e593e0864736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102115760003560e01c80637214956f11610125578063adc9772e116100ad578063d547741f1161007c578063d547741f14610472578063dd62ed3e14610485578063eb795549146104be578063f2fde38b146104d1578063fc0c546a146104e457610211565b8063adc9772e14610426578063b88d4fde14610439578063c2a672e01461044c578063d366f3b91461045f57610211565b806391d14854116100f457806391d14854146103dd57806395d89b41146103f05780639dc29fac146103f8578063a217fddf1461040b578063a9059cbb1461041357610211565b80637214956f146103a75780637f1c942d146103ba5780638142b9f2146103cd5780638456cb59146103d557610211565b80632f2ff15d116101a857806340c10f191161017757806340c10f191461033a578063423f6cef1461034d57806342842e0e146103605780635c975abb1461037357806370a082311461037e57610211565b80632f2ff15d146102f5578063313ce5671461030a57806336568abe1461031f5780633f4ba83a1461033257610211565b8063174e4ea6116101e4578063174e4ea61461029657806318160ddd146102b757806323b872dd146102bf578063248a9ca3146102d257610211565b806301ffc9a71461021657806306fdde031461023e578063095ea7b31461025357806316fd84f714610266575b600080fd5b610229610224366004612180565b6104f7565b60405190151581526020015b60405180910390f35b61024661051a565b60405161023591906122d2565b6102296102613660046120a1565b6105ac565b60095461027e9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610235565b6102a96102a4366004612146565b6105f3565b604051908152602001610235565b6004546102a9565b6102296102cd366004612000565b6106ae565b6102a96102e0366004612146565b60009081526008602052604090206001015490565b61030861030336600461215e565b6106ec565b005b60075460405160ff9091168152602001610235565b61030861032d36600461215e565b610717565b610308610795565b6102296103483660046120a1565b610833565b61030861035b3660046120a1565b61087d565b61030861036e366004612000565b610897565b60095460ff16610229565b6102a961038c366004611fb4565b6001600160a01b031660009081526002602052604090205490565b6102a96103b5366004612146565b6108b2565b6103086103c83660046121b8565b61095c565b6103086109e8565b610308610aac565b6102296103eb36600461215e565b610b20565b610246610b4b565b6102296104063660046120a1565b610b5a565b6102a9600081565b6102296104213660046120a1565b610b9b565b6102a96104343660046120a1565b610bd0565b61030861044736600461203b565b610df3565b6102a961045a3660046120a1565b610e7f565b61030861046d36600461215e565b611005565b61030861048036600461215e565b6110fa565b6102a9610493366004611fce565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6103086104cc3660046120ca565b611120565b6103086104df366004611fb4565b6111a9565b600a5461027e906001600160a01b031681565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b606060058054610529906123cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610555906123cb565b80156105a25780601f10610577576101008083540402835291602001916105a2565b820191906000526020600020905b81548152906001019060200180831161058557829003601f168201915b5050505050905090565b60006105ba60095460ff1690565b156105e05760405162461bcd60e51b81526004016105d7906122e5565b60405180910390fd5b6105ea83836111df565b90505b92915050565b600080600960019054906101000a90046001600160a01b03166001600160a01b0316631a39d8ef6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190612232565b90506000811161068e578291506106a8565b60045461069b8285612395565b6106a59190612375565b91505b50919050565b60006106bc60095460ff1690565b156106d95760405162461bcd60e51b81526004016105d7906122e5565b6106e48484846111ec565b949350505050565b600082815260086020526040902060010154610708813361123e565b61071283836112a2565b505050565b6001600160a01b03811633146107875760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016105d7565b610791828261130b565b5050565b60095460ff166107de5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105d7565b653830bab9b2b960d11b6107f2813361123e565b6009805460ff191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a150565b60006108476430b236b4b760d91b3361123e565b60095460ff161561086a5760405162461bcd60e51b81526004016105d7906122e5565b6108748383611372565b50600192915050565b610791828260405180602001604052806000815250611120565b61071283838360405180602001604052806000815250610df3565b600080600960019054906101000a90046001600160a01b03166001600160a01b0316631a39d8ef6040518163ffffffff1660e01b815260040160206040518083038186803b15801561090357600080fd5b505afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190612232565b90506000811161094d578291506106a8565b806004548461069b9190612395565b600054610100900460ff16806109715750303b155b8061097f575060005460ff16155b61099b5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff161580156109bd576000805461ffff19166101011790555b6109c8848484611470565b6109d06114dc565b80156109e2576000805461ff00191690555b50505050565b600054610100900460ff16806109fd5750303b155b80610a0b575060005460ff16155b610a275760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015610a49576000805461ffff19166101011790555b610a976040518060400160405280600c81526020016b189bdb9919590812d554d11560a21b815250604051806040016040528060068152602001651892d554d11560d21b815250600661095c565b8015610aa9576000805461ff00191690555b50565b60095460ff1615610acf5760405162461bcd60e51b81526004016105d7906122e5565b653830bab9b2b960d11b610ae3813361123e565b6009805460ff191660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610828565b60009182526008602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060068054610529906123cb565b6000610b6e6430b236b4b760d91b3361123e565b60095460ff1615610b915760405162461bcd60e51b81526004016105d7906122e5565b6108748383611573565b6000610ba960095460ff1690565b15610bc65760405162461bcd60e51b81526004016105d7906122e5565b6105ea8383611664565b6000610bde60095460ff1690565b15610bfb5760405162461bcd60e51b81526004016105d7906122e5565b60008211610c0b575060006105ed565b610c14826108b2565b9050610c208382611372565b600a546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610c7257600080fd5b505af1158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caa919061211f565b50600a5460095460405163095ea7b360e01b81526001600160a01b03610100909204821660048201526024810185905291169063095ea7b390604401602060405180830381600087803b158015610d0057600080fd5b505af1158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d38919061211f565b5060095460405163534a7e1d60e11b8152600481018490526101009091046001600160a01b03169063a694fc3a90602401600060405180830381600087803b158015610d8357600080fd5b505af1158015610d97573d6000803e3d6000fd5b5050604080513381526001600160a01b0387166020820152908101859052606081018490527f63602d0ecc7b3a0ef7ff1a116e23056662d64280355ba8031b6d0d767c4b4458925060800190505b60405180910390a192915050565b610dfe8484846106ae565b50610e0b84848484611671565b6109e2576040805162461bcd60e51b81526020600482015260248101919091527f4b4950373a3a736166655472616e7366657246726f6d3a207472616e7366657260448201527f20746f206e6f6e204b495037526563656976657220696d706c656d656e74657260648201526084016105d7565b6000610e8d60095460ff1690565b15610eaa5760405162461bcd60e51b81526004016105d7906122e5565b60008211610eba575060006105ed565b610ec3826105f3565b9050610ecf3383611573565b6009546040516305c2fbcf60e31b8152600481018390526101009091046001600160a01b031690632e17de7890602401600060405180830381600087803b158015610f1957600080fd5b505af1158015610f2d573d6000803e3d6000fd5b5050600a5460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201869052909116925063a9059cbb9150604401602060405180830381600087803b158015610f7f57600080fd5b505af1158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb7919061211f565b50604080513381526001600160a01b0385166020820152908101829052606081018390527f18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef90608001610de5565b6110176430b236b4b760d91b3361123e565b60095460ff161561103a5760405162461bcd60e51b81526004016105d7906122e5565b816b7969656c64466163746f727960a01b14156110765760098054610100600160a81b0319166101006001600160a01b03841602179055610791565b81643a37b5b2b760d91b14156110a657600a80546001600160a01b0319166001600160a01b038316179055610791565b60405162461bcd60e51b8152602060048201526024808201527f42617365426f6e643a3a636f6e6669673a20756e7265636f676e697a65642d706044820152636172616d60e01b60648201526084016105d7565b600082815260086020526040902060010154611116813361123e565b610712838361130b565b61112a8383610b9b565b5061113733848484611671565b6107125760405162461bcd60e51b815260206004820152603c60248201527f4b4950373a3a736166655472616e736665723a207472616e7366657220746f2060448201527f6e6f6e204b495037526563656976657220696d706c656d656e7465720000000060648201526084016105d7565b6111bb6437bbb732b960d91b3361123e565b6111cd6437bbb732b960d91b826112a2565b610aa96437bbb732b960d91b3361130b565b600061087433848461172f565b60006111f9848484611867565b6001600160a01b03841660009081526003602090815260408083203380855292529091205461123491869161122f9086906123b4565b61172f565b5060019392505050565b6112488282610b20565b6107915760405162461bcd60e51b815260206004820152602560248201527f416363657373436f6e74726f6c3a5f636865636b526f6c653a696e76616c696460448201526420726f6c6560d81b60648201526084016105d7565b6112ac8282610b20565b6107915760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6113158282610b20565b156107915760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0382166113de5760405162461bcd60e51b815260206004820152602d60248201527f4b495037457874656e6465643a3a5f6d696e743a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b60648201526084016105d7565b806004546113ec919061235d565b6004556001600160a01b03821660009081526002602052604090205461141390829061235d565b6001600160a01b0383166000818152600260205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114649085815260200190565b60405180910390a35050565b600054610100900460ff16806114855750303b155b80611493575060005460ff16155b6114af5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff161580156114d1576000805461ffff19166101011790555b6109c88484846119e9565b600054610100900460ff16806114f15750303b155b806114ff575060005460ff16155b61151b5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff1615801561153d576000805461ffff19166101011790555b611545611a5d565b611560653830bab9b2b960d11b6437bbb732b960d91b611ac6565b610a97653830bab9b2b960d11b33611b11565b6001600160a01b0382166115e15760405162461bcd60e51b815260206004820152602f60248201527f4b495037457874656e6465643a3a5f6275726e3a206275726e2066726f6d207460448201526e6865207a65726f206164647265737360881b60648201526084016105d7565b806004546115ef91906123b4565b6004556001600160a01b0382166000908152600260205260409020546116169082906123b4565b6001600160a01b0383166000818152600260205260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114649085815260200190565b6000610874338484611867565b60006001600160a01b0384163b61168a575060016106e4565b604051634e8c461160e11b81526000906001600160a01b03861690639d188c22906116bf9033908a9089908990600401612295565b602060405180830381600087803b1580156116d957600080fd5b505af11580156116ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611711919061219c565b6001600160e01b031916634e8c461160e11b14915050949350505050565b6001600160a01b03831661179b5760405162461bcd60e51b815260206004820152602d60248201527f4b4950373a3a5f617070726f76653a20617070726f76652066726f6d2074686560448201526c207a65726f206164647265737360981b60648201526084016105d7565b6001600160a01b0382166118055760405162461bcd60e51b815260206004820152602b60248201527f4b4950373a3a5f617070726f76653a20617070726f766520746f20746865207a60448201526a65726f206164647265737360a81b60648201526084016105d7565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166118d55760405162461bcd60e51b815260206004820152602f60248201527f4b4950373a3a5f7472616e736665723a207472616e736665722066726f6d207460448201526e6865207a65726f206164647265737360881b60648201526084016105d7565b6001600160a01b0382166119415760405162461bcd60e51b815260206004820152602d60248201527f4b4950373a3a5f7472616e736665723a207472616e7366657220746f2074686560448201526c207a65726f206164647265737360981b60648201526084016105d7565b6001600160a01b0383166000908152600260205260409020546119659082906123b4565b6001600160a01b03808516600090815260026020526040808220939093559084168152205461199590829061235d565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061185a9085815260200190565b600054610100900460ff16806119fe5750303b155b80611a0c575060005460ff16155b611a285760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611a4a576000805461ffff19166101011790555b611a52611b1b565b6109d0848484611b8c565b600054610100900460ff1680611a725750303b155b80611a80575060005460ff16155b611a9c5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611abe576000805461ffff19166101011790555b610a97611c34565b600082815260086020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61079182826112a2565b600054610100900460ff1680611b305750303b155b80611b3e575060005460ff16155b611b5a5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611b7c576000805461ffff19166101011790555b611b84611d05565b610a97611d76565b600054610100900460ff1680611ba15750303b155b80611baf575060005460ff16155b611bcb5760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611bed576000805461ffff19166101011790555b8351611c00906005906020870190611e7d565b508251611c14906006906020860190611e7d565b506007805460ff191660ff84161790556109d063a219a02560e01b611de3565b600054610100900460ff1680611c495750303b155b80611c57575060005460ff16155b611c735760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611c95576000805461ffff19166101011790555b611ca76437bbb732b960d91b33611b11565b611cc16430b236b4b760d91b6437bbb732b960d91b611ac6565b611cde6737b832b930ba37b960c11b6437bbb732b960d91b611ac6565b611cf06430b236b4b760d91b33611b11565b610a976737b832b930ba37b960c11b33611b11565b600054610100900460ff1680611d1a5750303b155b80611d28575060005460ff16155b611d445760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611d66576000805461ffff19166101011790555b610a976301ffc9a760e01b611de3565b600054610100900460ff1680611d8b5750303b155b80611d99575060005460ff16155b611db55760405162461bcd60e51b81526004016105d79061230f565b600054610100900460ff16158015611dd7576000805461ffff19166101011790555b610a97636578737160e01b5b6001600160e01b03198082161415611e555760405162461bcd60e51b815260206004820152602f60248201527f4b495031333a3a5f7265676973746572496e746572666163653a20696e76616c60448201526e1a59081a5b9d195c999858d9481a59608a1b60648201526084016105d7565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b828054611e89906123cb565b90600052602060002090601f016020900481019282611eab5760008555611ef1565b82601f10611ec457805160ff1916838001178555611ef1565b82800160010185558215611ef1579182015b82811115611ef1578251825591602001919060010190611ed6565b50611efd929150611f01565b5090565b5b80821115611efd5760008155600101611f02565b80356001600160a01b038116811461051557600080fd5b600082601f830112611f3d578081fd5b813567ffffffffffffffff80821115611f5857611f58612416565b604051601f8301601f19908116603f01168101908282118183101715611f8057611f80612416565b81604052838152866020858801011115611f98578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611fc5578081fd5b6105ea82611f16565b60008060408385031215611fe0578081fd5b611fe983611f16565b9150611ff760208401611f16565b90509250929050565b600080600060608486031215612014578081fd5b61201d84611f16565b925061202b60208501611f16565b9150604084013590509250925092565b60008060008060808587031215612050578081fd5b61205985611f16565b935061206760208601611f16565b925060408501359150606085013567ffffffffffffffff811115612089578182fd5b61209587828801611f2d565b91505092959194509250565b600080604083850312156120b3578182fd5b6120bc83611f16565b946020939093013593505050565b6000806000606084860312156120de578283fd5b6120e784611f16565b925060208401359150604084013567ffffffffffffffff811115612109578182fd5b61211586828701611f2d565b9150509250925092565b600060208284031215612130578081fd5b8151801515811461213f578182fd5b9392505050565b600060208284031215612157578081fd5b5035919050565b60008060408385031215612170578182fd5b82359150611ff760208401611f16565b600060208284031215612191578081fd5b813561213f8161242c565b6000602082840312156121ad578081fd5b815161213f8161242c565b6000806000606084860312156121cc578283fd5b833567ffffffffffffffff808211156121e3578485fd5b6121ef87838801611f2d565b94506020860135915080821115612204578384fd5b5061221186828701611f2d565b925050604084013560ff81168114612227578182fd5b809150509250925092565b600060208284031215612243578081fd5b5051919050565b60008151808452815b8181101561226f57602081850181015186830182015201612253565b818111156122805782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122c89083018461224a565b9695505050505050565b6000602082526105ea602083018461224a565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561237057612370612400565b500190565b60008261239057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156123af576123af612400565b500290565b6000828210156123c6576123c6612400565b500390565b600181811c908216806123df57607f821691505b602082108114156106a857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610aa957600080fdfea264697066735822122021bd3016cfeb0d8df07f0d45da80cc29f3127f2139cddc68e590f5c63e593e0864736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fromTokenAmount(uint256)": {
        "notice": "Calculate bond amount corresponding to the given token amount"
      },
      "stake(address,uint256)": {
        "notice": "Stake token to this contract and return bond."
      },
      "toTokenAmount(uint256)": {
        "notice": "Calculate token amount corresponding to the given bond amount"
      },
      "unstake(address,uint256)": {
        "notice": "Untake to return staked token."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23243,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 23246,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 21198,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_supportedInterfaces",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes4,t_bool)"
      },
      {
        "astId": 21262,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_balances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21268,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_allowances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 21270,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 21650,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_name",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 21652,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_symbol",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 21654,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_decimals",
        "offset": 0,
        "slot": "7",
        "type": "t_uint8"
      },
      {
        "astId": 20189,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_roles",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)20184_storage)"
      },
      {
        "astId": 20579,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "_paused",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 18729,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "yieldFactory",
        "offset": 1,
        "slot": "9",
        "type": "t_contract(IYieldFactory)9658"
      },
      {
        "astId": 18732,
        "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
        "label": "token",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IKIP7)9900"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IKIP7)9900": {
        "encoding": "inplace",
        "label": "contract IKIP7",
        "numberOfBytes": "20"
      },
      "t_contract(IYieldFactory)9658": {
        "encoding": "inplace",
        "label": "contract IYieldFactory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)20184_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)20184_storage"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(RoleData)20184_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 20181,
            "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20183,
            "contract": "contracts/collateral/KUSDT/BKUSDT.sol:BKUSDT",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}