{
  "address": "0x8d006Cf3Df18A8972e012E2d6D7E8CF691e90C4a",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityIndex",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "now",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ksdAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityIndex",
          "type": "uint256"
        }
      ],
      "name": "Earn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityIndex",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "KSD",
          "type": "address"
        }
      ],
      "name": "__DKSD_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ksdAmount",
          "type": "uint256"
        }
      ],
      "name": "earn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rawAmount",
          "type": "uint256"
        }
      ],
      "name": "fromRawAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ksd",
      "outputs": [
        {
          "internalType": "contract IKIP7",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "precision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "rawBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "safeTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "toRawAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdf2667efebfdd9af7d2fbd494ad56137fff29bf29df3c5ecef95eda7aa0582a6",
  "receipt": {
    "to": null,
    "from": "0x276199434a04b2607D5E95670e5cB6a7E7f10f3d",
    "contractAddress": "0x8d006Cf3Df18A8972e012E2d6D7E8CF691e90C4a",
    "transactionIndex": 231,
    "gasUsed": "2374331",
    "logsBloom": "0x
    "blockHash": "0xbae58c2486296878d58392576d1d856961825027a09283005ad57aa0b1f93742",
    "transactionHash": "0xdf2667efebfdd9af7d2fbd494ad56137fff29bf29df3c5ecef95eda7aa0582a6",
    "logs": [],
    "blockNumber": 79129975,
    "cumulativeGasUsed": null,
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "daac9cba34dfabe5953ff704314717f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"now\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ksdAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"}],\"name\":\"Earn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"KSD\",\"type\":\"address\"}],\"name\":\"__DKSD_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ksdAmount\",\"type\":\"uint256\"}],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"fromRawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ksd\",\"outputs\":[{\"internalType\":\"contract IKIP7\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rawBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toRawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"amount of depositing ksd\",\"to\":\"address of receiving dksd\"}},\"earn(uint256)\":{\"details\":\"this function is called by KSDRewardManager contract\",\"params\":{\"ksdAmount\":\"amount of receiving ksd\"}},\"fromRawAmount(uint256)\":{\"params\":{\"rawAmount\":\"rawAmount\"},\"returns\":{\"_0\":\"amount of corresponding to rawAmount\"}},\"rawBalanceOf(address)\":{\"params\":{\"usr\":\"address of user\"}},\"toRawAmount(uint256)\":{\"params\":{\"amount\":\"amount\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"amount of withdrawing dksd\",\"to\":\"address of receiving ksd\"}}},\"title\":\"A delegated stable coin.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"deposit ksd, and receive dksd.\"},\"earn(uint256)\":{\"notice\":\"receive ksd and distribute the ksd to dksd holder\"},\"fromRawAmount(uint256)\":{\"notice\":\"calculate amount of corresponding to rawAmount\"},\"liquidityIndex()\":{\"notice\":\"multiplicative factor for increasing balance/totalSupply dksd\\ub791 ksd\\ub791 1 \\ub300 1 \\ud398\\uae45 \\uc2dc\\ud0a4\\uac8c \\ub9cc\\ub4dc\\ub294 \\ubcc0\\uc218\\ub85c, \\uc720\\uc800\\uac00 \\ucc98\\uc74c KSD\\ub97c a \\ub9cc\\ud07c deposit\\ud558\\uba74, a / liquidityIndex \\ub9cc\\ud07c \\uc720\\uc800\\uc758 _balance\\ub97c \\uc99d\\uac00\\uc2dc\\ud0a8\\ub2e4. \\ubc18\\uba74 balanceOf \\ud568\\uc218\\uc5d0\\uc11c\\ub294 \\uc720\\uc800\\uc758 balance\\ub97c \\ubcf4\\uc5ec\\uc904 \\ub54c\\ub294 _balance * liquidityIndex \\ub9cc\\ud07c \\ubcf4\\uc5ec\\uc8fc\\uae30 \\ub54c\\ubb38\\uc5d0, \\uc720\\uc800\\uc5d0\\uac8c \\ubcf4\\uc5ec\\uc9c0\\ub294 balance \\uc591\\uc740 a \\ub85c \\ubcf4\\uc5ec\\uc9c0\\uac8c \\ub41c\\ub2e4. \\uc720\\uc800\\uac00 withdraw \\ud558\\uae30 \\uc804\\uc5d0, yield \\uc218\\uc775\\uc774 DKSD contract\\ub85c \\ubd84\\ubc30\\ub418\\uba74 liquidityIndex\\ub294 \\uc99d\\uac00\\ud558\\uac8c \\ub418\\uace0, \\uc720\\uc800\\uc758 _balance\\ub294 \\ubcc0\\ud568 \\uc5c6\\uc9c0\\ub9cc, balance\\ub294 \\uc99d\\uac00\\ud55c \\uac83 \\ucc98\\ub7fc \\ubcf4\\uc774\\uac8c \\ub41c\\ub2e4.\"},\"precision()\":{\"notice\":\"precision of scaled values\"},\"rawBalanceOf(address)\":{\"notice\":\"get raw balance of user\"},\"rawTotalSupply()\":{\"notice\":\"get raw total balance\"},\"toRawAmount(uint256)\":{\"notice\":\"calculate rawAmount of corresponding to amount\"},\"withdraw(address,uint256)\":{\"notice\":\"burn dksd, and withdraw ksd\"}},\"notice\":\"Users can deposit ksd and in return receive dksd, and also dksd holder can exchange dksd to ksd in a ratio of 1 to 1. The purpose of this contract is distributing profit of yield farming to dksd holder. The profit of yield framing is swapped into KSD, and the KSD distributed to dKSD holder. Therefore, the balance of dKSD holder increases with the passing of time. For example, if you deposit 100KSD at first, you receive 100dKSD. With the passing of time, the balance of your DKSD becomes 101dKSD. And then, you can withdraw 101KSD.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/saving/DKSD.sol\":\"DKSD\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IDKSD.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"../library/kip/KIP7Detailed.sol\\\";\\n\\npragma solidity 0.8.3;\\n\\n/// @title A delegated stable coin.\\n/// @notice Users can deposit ksd and in return receive dksd,\\n/// and also dksd holder can exchange dksd to ksd in a ratio of 1 to 1.\\n/// The purpose of this contract is distributing profit of yield farming to dksd holder.\\n/// The profit of yield framing is swapped into KSD, and the KSD distributed to dKSD holder.\\n/// Therefore, the balance of dKSD holder increases with the passing of time.\\n/// For example, if you deposit 100KSD at first, you receive 100dKSD.\\n/// With the passing of time, the balance of your DKSD becomes 101dKSD.\\n/// And then, you can withdraw 101KSD.\\ninterface IDKSD is IKIP7Detailed {\\n    /// @notice value of liquidityIndex\\n    function liquidityIndex() external view returns (uint256);\\n\\n    /// @notice precision of scaled values\\n    function precision() external pure returns (uint256);\\n\\n    /// @notice deposit ksd\\n    /// @param to address of receiving dksd\\n    /// @param amount amount of depositing ksd\\n    function deposit(address to, uint256 amount) external;\\n\\n    /// @notice withdraw ksd\\n    /// @param to address of receiving ksd\\n    /// @param amount amount of withdrawing dksd\\n    function withdraw(address to, uint256 amount) external;\\n\\n    /// @notice receive ksd and distribute the ksd to dksd holder\\n    /// @param ksdAmount amount of receiving ksd\\n    function earn(uint256 ksdAmount) external;\\n\\n    /// @notice calculate amount of corresponding to rawAmount\\n    /// @param rawAmount rawAmount\\n    /// @return amount of corresponding to rawAmount\\n    function fromRawAmount(uint256 rawAmount) external view returns (uint256);\\n\\n    /// @notice calculate rawAmount of corresponding to amount\\n    /// @param amount amount\\n    function toRawAmount(uint256 amount) external view returns (uint256);\\n\\n    /// @notice get raw balance of user\\n    /// @param usr address of user\\n    function rawBalanceOf(address usr) external view returns (uint256);\\n\\n    /// @notice get raw total balance\\n    function rawTotalSupply() external view returns (uint256);\\n\\n    event Deposit(address indexed user, address to, uint256 amount, uint256 liquidityIndex);\\n    event Withdraw(address indexed user, address to, uint256 amount, uint256 liquidityIndex);\\n    event Earn(uint256 now, uint256 ksdAmount, uint256 liquidityIndex);\\n}\\n\",\"keccak256\":\"0x10b1a2c17e756ccf1fc1b13a431d175e3b570d1db9b4bb12059131ea843fce58\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\ninterface IKIP13 {\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x651958b745058d476a41ab467d508d2fe6c131d83cdbe9dfe28b3893d32c48fd\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IKIP13.sol\\\";\\n\\ninterface IKIP7 is IKIP13 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function safeTransfer(\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function safeTransfer(address recipient, uint256 amount) external;\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6fb8afaff38611db93f55c13447c08ea47e5392b895a75bf43999808176528e0\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IKIP7.sol\\\";\\n\\ninterface IKIP7Detailed is IKIP7 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xb19fcc63818f59c23defe41b45aa9235cd43a373d97fe222fc939ad3f0f697c9\",\"license\":\"MIT\"},\"contracts/interface/kip/IKIP7Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\ninterface IKIP7Receiver {\\n    function onKIP7Received(\\n        address _operator,\\n        address _from,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x28382ebf22d533d01fb1385a4a598f98769ed91e657208711ba5797a1509d261\",\"license\":\"MIT\"},\"contracts/library/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./openzeppelin/proxy/Initializable.sol\\\";\\n\\ncontract AccessControl is Initializable {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        _checkRole(bytes32(\\\"owner\\\"), msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        _checkRole(bytes32(\\\"admin\\\"), msg.sender);\\n        _;\\n    }\\n\\n    modifier onlyOperator() {\\n        _checkRole(bytes32(\\\"operator\\\"), msg.sender);\\n        _;\\n    }\\n\\n    function __AccessControl_init() internal initializer {\\n        __AccessControl_init_unchained();\\n    }\\n\\n    function __AccessControl_init_unchained() private initializer {\\n        _setupRole(bytes32(\\\"owner\\\"), msg.sender);\\n        _setRoleAdmin(bytes32(\\\"admin\\\"), bytes32(\\\"owner\\\"));\\n        _setRoleAdmin(bytes32(\\\"operator\\\"), bytes32(\\\"owner\\\"));\\n        _setupRole(bytes32(\\\"admin\\\"), msg.sender);\\n        _setupRole(bytes32(\\\"operator\\\"), msg.sender);\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    function _checkRole(bytes32 role, address account) internal view {\\n        if (!hasRole(role, account)) {\\n            revert(\\\"AccessControl:_checkRole:invalid role\\\");\\n        }\\n    }\\n\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    function grantRole(bytes32 role, address account) public onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    function revokeRole(bytes32 role, address account) public onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    function renounceRole(bytes32 role, address account) public {\\n        require(account == msg.sender, \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    function _setupRole(bytes32 role, address account) internal {\\n        _grantRole(role, account);\\n    }\\n\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, msg.sender);\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, msg.sender);\\n        }\\n    }\\n\\n    // --- ownable --\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _grantRole(bytes32(\\\"owner\\\"), newOwner);\\n        _revokeRole(bytes32(\\\"owner\\\"), msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x16d2c3697b545ce0f8f6508d64eef0522b972736cbe77fc7c2e7e50a348f94b8\",\"license\":\"MIT\"},\"contracts/library/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AccessControl.sol\\\";\\n\\nabstract contract Pausable is AccessControl {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    function __Pausable_init() internal initializer {\\n        __AccessControl_init();\\n        _setRoleAdmin(bytes32(\\\"pauser\\\"), bytes32(\\\"owner\\\"));\\n        _setupRole(bytes32(\\\"pauser\\\"), msg.sender);\\n    }\\n\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    modifier whenNotPaused() virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    function pause() public whenNotPaused onlyRole(\\\"pauser\\\") {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    function unpause() public whenPaused onlyRole(\\\"pauser\\\") {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x09830075c06c05d623c2db6ce3f84b495181ab439043cdaab714060b9fc23f5a\",\"license\":\"MIT\"},\"contracts/library/WadRayMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nlibrary WadRayMath {\\n    uint256 internal constant WAD = 1e18;\\n    uint256 internal constant halfWAD = WAD / 2;\\n\\n    uint256 internal constant RAY = 1e27;\\n    uint256 internal constant halfRAY = RAY / 2;\\n\\n    uint256 internal constant WAD_RAY_RATIO = 1e9;\\n\\n    /**\\n     * @return One ray, 1e27\\n     **/\\n    function ray() internal pure returns (uint256) {\\n        return RAY;\\n    }\\n\\n    /**\\n     * @return One wad, 1e18\\n     **/\\n\\n    function wad() internal pure returns (uint256) {\\n        return WAD;\\n    }\\n\\n    /**\\n     * @return Half ray, 1e27/2\\n     **/\\n    function halfRay() internal pure returns (uint256) {\\n        return halfRAY;\\n    }\\n\\n    /**\\n     * @return Half ray, 1e18/2\\n     **/\\n    function halfWad() internal pure returns (uint256) {\\n        return halfWAD;\\n    }\\n\\n    /**\\n     * @dev Multiplies two wad, rounding half up to the nearest wad\\n     * @param a Wad\\n     * @param b Wad\\n     * @return The result of a*b, in wad\\n     **/\\n    function wadMul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0 || b == 0) {\\n            return 0;\\n        }\\n\\n        require(a <= (type(uint256).max - halfWAD) / b, \\\"WadRayMath::wadMul: overflow\\\");\\n\\n        return (a * b + halfWAD) / WAD;\\n    }\\n\\n    /**\\n     * @dev Divides two wad, rounding half up to the nearest wad\\n     * @param a Wad\\n     * @param b Wad\\n     * @return The result of a/b, in wad\\n     **/\\n    function wadDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0, \\\"WadRayMath::wadDiv: divide by zero\\\");\\n        uint256 halfB = b / 2;\\n\\n        require(a <= (type(uint256).max - halfB) / WAD, \\\"WadRayMath::wadDiv: overflow\\\");\\n\\n        return (a * WAD + halfB) / b;\\n    }\\n\\n    /**\\n     * @dev Multiplies two ray, rounding half up the nearest ray\\n     * @param a Ray\\n     * @param b Ray\\n     * @return The result of a*b, in ray\\n     **/\\n    function rayMul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0 || b == 0) {\\n            return 0;\\n        }\\n\\n        require(a <= (type(uint256).max - halfRAY) / b, \\\"WadRayMath::rayMul: overflow\\\");\\n\\n        return (a * b + halfRAY) / RAY;\\n    }\\n\\n    /**\\n     * @dev Divides two ray, rounding half up the nearest ray\\n     * @param a Ray\\n     * @param b Ray\\n     * @return The result of a/b, in ray\\n     **/\\n    function rayDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0, \\\"WadRayMath::rayDiv: divide by zero\\\");\\n        uint256 halfB = b / 2;\\n\\n        require(a <= (type(uint256).max - halfB) / RAY, \\\"WadRayMath::rayDiv: overflow\\\");\\n\\n        return (a * RAY + halfB) / b;\\n    }\\n\\n    function rayCeilMul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0 || b == 0) {\\n            return 0;\\n        }\\n\\n        require(a <= (type(uint256).max - RAY + 1) / b, \\\"WadRayMath::rayMul: overflow\\\");\\n\\n        return (a * b + RAY - 1) / RAY;\\n    }\\n\\n    function rayCeilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0, \\\"WadRayMath::rayDiv: divide by zero\\\");\\n\\n        require(a <= (type(uint256).max - b + 1) / RAY, \\\"WadRayMath::rayDiv: overflow\\\");\\n\\n        return (a * RAY + b - 1) / b;\\n    }\\n\\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * RAY;\\n        z = z / y;\\n    }\\n\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * y;\\n        require(y == 0 || z / y == x, \\\"WadRayMath:: rmul: overflow\\\");\\n        z = z / RAY;\\n    }\\n\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * y;\\n        require(y == 0 || z / y == x, \\\"WadRayMath:: wmul: overflow\\\");\\n        z = z / WAD;\\n    }\\n\\n    // copy from maker dao\\n    // https://github.com/makerdao/dss/blob/6c1c780d3c8ab6e27ea63d272e0d1176b05b9871/src/jug.sol#L62\\n    function rpow(\\n        uint256 x,\\n        uint256 n,\\n        uint256 b\\n    ) internal pure returns (uint256 z) {\\n        assembly {\\n            switch x\\n            case 0 {\\n                switch n\\n                case 0 {\\n                    z := b\\n                }\\n                default {\\n                    z := 0\\n                }\\n            }\\n            default {\\n                switch mod(n, 2)\\n                case 0 {\\n                    z := b\\n                }\\n                default {\\n                    z := x\\n                }\\n                let half := div(b, 2) // for rounding.\\n                for {\\n                    n := div(n, 2)\\n                } n {\\n                    n := div(n, 2)\\n                } {\\n                    let xx := mul(x, x)\\n                    if iszero(eq(div(xx, x), x)) {\\n                        revert(0, 0)\\n                    }\\n                    let xxRound := add(xx, half)\\n                    if lt(xxRound, xx) {\\n                        revert(0, 0)\\n                    }\\n                    x := div(xxRound, b)\\n                    if mod(n, 2) {\\n                        let zx := mul(z, x)\\n                        if and(iszero(iszero(x)), iszero(eq(div(zx, x), z))) {\\n                            revert(0, 0)\\n                        }\\n                        let zxRound := add(zx, half)\\n                        if lt(zxRound, zx) {\\n                            revert(0, 0)\\n                        }\\n                        z := div(zxRound, b)\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Casts ray down to wad\\n     * @param a Ray\\n     * @return a casted to wad, rounded half up to the nearest wad\\n     **/\\n    function rayToWad(uint256 a) internal pure returns (uint256) {\\n        uint256 halfRatio = WAD_RAY_RATIO / 2;\\n        uint256 result = halfRatio + a;\\n        require(result >= halfRatio, \\\"WadRayMath::rayToWad: overflow\\\");\\n\\n        return result / WAD_RAY_RATIO;\\n    }\\n\\n    /**\\n     * @dev Converts wad up to ray\\n     * @param a Wad\\n     * @return a converted in ray\\n     **/\\n    function wadToRay(uint256 a) internal pure returns (uint256) {\\n        uint256 result = a * WAD_RAY_RATIO;\\n        require(result / WAD_RAY_RATIO == a, \\\"WadRayMath::wadToRay: overflow\\\");\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xbfda078b46cc0f7958d40bf2a4d9b8c10f3405680093aa3004c2e76e515651c4\",\"license\":\"MIT\"},\"contracts/library/kip/KIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"../../interface/kip/IKIP13.sol\\\";\\nimport \\\"../openzeppelin/proxy/Initializable.sol\\\";\\n\\ncontract KIP13 is Initializable, IKIP13 {\\n    bytes4 private constant _INTERFACE_ID_KIP13 = 0x01ffc9a7;\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    function __KIP13_init() internal initializer {\\n        _registerInterface(_INTERFACE_ID_KIP13);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    function _registerInterface(bytes4 interfaceId) internal {\\n        require(interfaceId != 0xffffffff, \\\"KIP13::_registerInterface: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\\n\",\"keccak256\":\"0xb258571d866799d24f0334192c74b12c90462a1838e7478d5ae9855fef40b8cf\",\"license\":\"MIT\"},\"contracts/library/kip/KIP7.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"../openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"../openzeppelin/proxy/Initializable.sol\\\";\\nimport \\\"../../interface/kip/IKIP7.sol\\\";\\nimport \\\"../../interface/kip/IKIP7Receiver.sol\\\";\\nimport \\\"./KIP13.sol\\\";\\n\\ncontract KIP7 is KIP13, IKIP7 {\\n    using Address for address;\\n\\n    bytes4 private constant _KIP7_RECEIVED = 0x9d188c22;\\n\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _totalSupply;\\n\\n    bytes4 private constant _INTERFACE_ID_KIP7 = 0x65787371;\\n\\n    function __KIP7_init() internal initializer {\\n        __KIP13_init();\\n        __KIP7_init_unchained();\\n    }\\n\\n    function __KIP7_init_unchained() private initializer {\\n        _registerInterface(_INTERFACE_ID_KIP7);\\n    }\\n\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\\n        return true;\\n    }\\n\\n    function safeTransfer(address recipient, uint256 amount) public virtual override {\\n        safeTransfer(recipient, amount, \\\"\\\");\\n    }\\n\\n    function safeTransfer(\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        transfer(recipient, amount);\\n        require(_checkOnKIP7Received(msg.sender, recipient, amount, data), \\\"KIP7::safeTransfer: transfer to non KIP7Receiver implementer\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override {\\n        safeTransferFrom(sender, recipient, amount, \\\"\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        transferFrom(sender, recipient, amount);\\n        require(_checkOnKIP7Received(sender, recipient, amount, data), \\\"KIP7::safeTransferFrom: transfer to non KIP7Receiver implementer\\\");\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"KIP7::_transfer: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"KIP7::_transfer: transfer to the zero address\\\");\\n        _balances[sender] = _balances[sender] - amount;\\n        _balances[recipient] = _balances[recipient] + amount;\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(owner != address(0), \\\"KIP7::_approve: approve from the zero address\\\");\\n        require(spender != address(0), \\\"KIP7::_approve: approve to the zero address\\\");\\n        _allowances[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function _checkOnKIP7Received(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes memory _data\\n    ) internal returns (bool) {\\n        if (!recipient.isContract()) {\\n            return true;\\n        }\\n\\n        bytes4 retval = IKIP7Receiver(recipient).onKIP7Received(msg.sender, sender, amount, _data);\\n        return (retval == _KIP7_RECEIVED);\\n    }\\n}\\n\",\"keccak256\":\"0x521bfda25e27804fa98e9e4ecc3ecd02dda2d4adc807fba29749fddbe30c215c\",\"license\":\"MIT\"},\"contracts/library/kip/KIP7Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\nimport \\\"../openzeppelin/proxy/Initializable.sol\\\";\\nimport \\\"../../interface/kip/IKIP7Detailed.sol\\\";\\nimport \\\"./KIP7.sol\\\";\\n\\ncontract KIP7Detailed is KIP7, IKIP7Detailed {\\n    string internal _name;\\n    string internal _symbol;\\n    uint8 internal _decimals;\\n\\n    bytes4 private constant INTERFACE_ID_KIP7_METADATA = 0xa219a025;\\n\\n    function __KIP7Detailed_init(\\n        string memory name_,\\n        string memory symbol_,\\n        uint8 decimals_\\n    ) internal initializer {\\n        __KIP7_init();\\n        __KIP7Detailed_init_unchained(name_, symbol_, decimals_);\\n    }\\n\\n    function __KIP7Detailed_init_unchained(\\n        string memory name_,\\n        string memory symbol_,\\n        uint8 decimals_\\n    ) private initializer {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = decimals_;\\n        _registerInterface(INTERFACE_ID_KIP7_METADATA);\\n    }\\n\\n    function name() public view override returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public view override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function decimals() public view override returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0x601577a4c26b7675999a2eb07e99c4b59f82b0faa5a15202be72f4a49366c1e0\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    // -- Kokoa --\\n    // extended\\n\\n    function add(uint256 x, int256 y) internal pure returns (uint256 z) {\\n        unchecked {\\n            z = x + uint256(y);\\n            require(y >= 0 || z <= x, \\\"SafeMath: addition overflow\\\");\\n            require(y <= 0 || z >= x, \\\"SafeMath: addition overflow\\\");\\n        }\\n    }\\n\\n    function sub(uint256 x, int256 y) internal pure returns (uint256 z) {\\n        unchecked {\\n            z = x - uint256(y);\\n            require(y <= 0 || z <= x, \\\"SafeMath: subtraction overflow\\\");\\n            require(y >= 0 || z >= x, \\\"SafeMath: subtraction overflow\\\");\\n        }\\n    }\\n\\n    function mul(uint256 x, int256 y) internal pure returns (int256 z) {\\n        unchecked {\\n            z = int256(x) * y;\\n            require(int256(x) >= 0, \\\"SafeMath: multiplication overflow\\\");\\n            require(y == 0 || z / y == int256(x), \\\"SafeMath: multiplication overflow\\\");\\n        }\\n    }\\n\\n    function mul(int256 x, uint256 y) internal pure returns (int256 z) {\\n        z = x * int256(y);\\n        require(int256(y) >= 0, \\\"SafeMath: multiplication overflow\\\");\\n        require(x == 0 || z / x == int256(y), \\\"SafeMath: multiplication overflow\\\");\\n    }\\n\\n    // -- makerdao --\\n    // extended\\n    uint256 constant ONE = 10**27;\\n    uint256 constant RAY = 10**27;\\n    uint256 constant WAD = 10**18;\\n\\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * RAY;\\n        z = z / y;\\n    }\\n\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * y;\\n        require(y == 0 || z / y == x, \\\"SafeMath:: rmul: overflow\\\");\\n        z = z / RAY;\\n    }\\n\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x * y;\\n        require(y == 0 || z / y == x, \\\"SafeMath:: wmul: overflow\\\");\\n        z = z / WAD;\\n    }\\n\\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x <= y ? x : y;\\n    }\\n\\n    function max(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x >= y ? x : y;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n\\n    // from uniswap\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\\n        z = y;\\n        uint256 x = y / 2 + 1;\\n        while (x < z) {\\n            z = x;\\n            x = (y / x + x) / 2;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc470c98add15d467271436b0ab2d99fc66a45f32d0ddd93d58436b74962b0f79\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\n/**\\n * @dev Collection of functions related to the address type,\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * This test is non-exhaustive, and there may be false-negatives: during the\\n     * execution of a contract's constructor, its address will be reported as\\n     * not containing a contract.\\n     *\\n     * > It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x61c683ae2ea61903ccc65eb60878b7ab1f1513412221dcbdca4178fceddd45fe\",\"license\":\"MIT\"},\"contracts/library/openzeppelin/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.3;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        // extcodesize checks the size of the code stored in an address, and\\n        // address returns the current address. Since the code is still not\\n        // deployed when running a constructor, any checks on its code size will\\n        // yield zero, making it an effective way to detect if a contract is\\n        // under construction or not.\\n        address self = address(this);\\n        uint256 cs;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            cs := extcodesize(self)\\n        }\\n        return cs == 0;\\n    }\\n}\\n\",\"keccak256\":\"0x95a413b1c4dc23bacf1a16b826a929f2ff756835e3ff3018aeff63afd497886f\",\"license\":\"MIT\"},\"contracts/saving/DKSD.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.3;\\n\\nimport \\\"../library/WadRayMath.sol\\\";\\nimport \\\"../library/kip/KIP7Detailed.sol\\\";\\nimport \\\"../library/Pausable.sol\\\";\\nimport \\\"../library/AccessControl.sol\\\";\\nimport \\\"../interface/IDKSD.sol\\\";\\nimport \\\"../library/openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\n/// @title A delegated stable coin.\\n/// @notice Users can deposit ksd and in return receive dksd,\\n/// and also dksd holder can exchange dksd to ksd in a ratio of 1 to 1.\\n/// The purpose of this contract is distributing profit of yield farming to dksd holder.\\n/// The profit of yield framing is swapped into KSD, and the KSD distributed to dKSD holder.\\n/// Therefore, the balance of dKSD holder increases with the passing of time.\\n/// For example, if you deposit 100KSD at first, you receive 100dKSD.\\n/// With the passing of time, the balance of your DKSD becomes 101dKSD.\\n/// And then, you can withdraw 101KSD.\\ncontract DKSD is KIP7Detailed, AccessControl, IDKSD, Pausable {\\n    using WadRayMath for uint256;\\n\\n    IKIP7 public ksd; /// address of ksd stable coin\\n\\n    /// @notice multiplicative factor for increasing balance/totalSupply\\n    /// dksd\\ub791 ksd\\ub791 1 \\ub300 1 \\ud398\\uae45 \\uc2dc\\ud0a4\\uac8c \\ub9cc\\ub4dc\\ub294 \\ubcc0\\uc218\\ub85c, \\uc720\\uc800\\uac00 \\ucc98\\uc74c KSD\\ub97c a \\ub9cc\\ud07c deposit\\ud558\\uba74,\\n    /// a / liquidityIndex \\ub9cc\\ud07c \\uc720\\uc800\\uc758 _balance\\ub97c \\uc99d\\uac00\\uc2dc\\ud0a8\\ub2e4.\\n    /// \\ubc18\\uba74 balanceOf \\ud568\\uc218\\uc5d0\\uc11c\\ub294 \\uc720\\uc800\\uc758 balance\\ub97c \\ubcf4\\uc5ec\\uc904 \\ub54c\\ub294 _balance * liquidityIndex \\ub9cc\\ud07c \\ubcf4\\uc5ec\\uc8fc\\uae30 \\ub54c\\ubb38\\uc5d0,\\n    /// \\uc720\\uc800\\uc5d0\\uac8c \\ubcf4\\uc5ec\\uc9c0\\ub294 balance \\uc591\\uc740 a \\ub85c \\ubcf4\\uc5ec\\uc9c0\\uac8c \\ub41c\\ub2e4.\\n    /// \\uc720\\uc800\\uac00 withdraw \\ud558\\uae30 \\uc804\\uc5d0, yield \\uc218\\uc775\\uc774 DKSD contract\\ub85c \\ubd84\\ubc30\\ub418\\uba74 liquidityIndex\\ub294 \\uc99d\\uac00\\ud558\\uac8c \\ub418\\uace0,\\n    /// \\uc720\\uc800\\uc758 _balance\\ub294 \\ubcc0\\ud568 \\uc5c6\\uc9c0\\ub9cc, balance\\ub294 \\uc99d\\uac00\\ud55c \\uac83 \\ucc98\\ub7fc \\ubcf4\\uc774\\uac8c \\ub41c\\ub2e4.\\n    uint256 public override liquidityIndex;\\n    uint256 public constant override precision = 1e12;\\n\\n    function __DKSD_init(address KSD) public initializer {\\n        __Pausable_init();\\n        __KIP7Detailed_init(\\\"Deposited KSD\\\", \\\"dKSD\\\", 18);\\n        ksd = IKIP7(KSD);\\n        liquidityIndex = WadRayMath.ray();\\n    }\\n\\n    /// @notice deposit ksd, and receive dksd.\\n    /// @param to address of receiving dksd\\n    /// @param amount amount of depositing ksd\\n    function deposit(address to, uint256 amount) external override {\\n        uint256 amountScaled = (amount * precision).rayDiv(liquidityIndex);\\n        require(amountScaled != 0, \\\"DKSD::deposit: too small amount\\\");\\n        _balances[to] = _balances[to] + amountScaled;\\n        _totalSupply = _totalSupply + amountScaled;\\n        emit Transfer(address(0), to, amount);\\n\\n        ksd.transferFrom(msg.sender, address(this), amount);\\n        emit Deposit(msg.sender, to, amount, liquidityIndex);\\n    }\\n\\n    /// @notice burn dksd, and withdraw ksd\\n    /// @param to address of receiving ksd\\n    /// @param amount amount of withdrawing dksd\\n    function withdraw(address to, uint256 amount) external override {\\n        require(balanceOf(msg.sender) >= amount, \\\"DKSD::withdraw: insufficient balance\\\");\\n\\n        uint256 amountScaled = (amount * precision).rayDiv(liquidityIndex);\\n        require(amountScaled != 0, \\\"DKSD::withdraw: too small amount\\\");\\n        _balances[msg.sender] = _balances[msg.sender] - amountScaled;\\n        _totalSupply = _totalSupply - amountScaled;\\n        emit Transfer(msg.sender, address(0), amount);\\n\\n        ksd.transfer(to, amount);\\n        emit Withdraw(msg.sender, to, amount, liquidityIndex);\\n    }\\n\\n    function fromRawAmount(uint256 rawAmount) external view override returns (uint256) {\\n        return rawAmount.rayMul(liquidityIndex) / precision;\\n    }\\n\\n    function toRawAmount(uint256 amount) external view override returns (uint256) {\\n        return (amount * precision).rayDiv(liquidityIndex);\\n    }\\n\\n    function rawBalanceOf(address usr) external view override returns (uint256) {\\n        return _balances[usr];\\n    }\\n\\n    function rawTotalSupply() external view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address usr) public view virtual override(IKIP7, KIP7) returns (uint256) {\\n        return _balances[usr].rayMul(liquidityIndex) / precision;\\n    }\\n\\n    function totalSupply() public view virtual override(IKIP7, KIP7) returns (uint256) {\\n        return _totalSupply.rayMul(liquidityIndex) / precision;\\n    }\\n\\n    function __transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"DKSD::_transfer: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"DKSD::_transfer: transfer to the zero address\\\");\\n\\n        uint256 amountScaled = (amount * precision).rayDiv(liquidityIndex);\\n        _balances[sender] = _balances[sender] - amountScaled;\\n        _balances[recipient] = _balances[recipient] + amountScaled;\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public virtual override(IKIP7, KIP7) returns (bool success) {\\n        __transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override(IKIP7, KIP7) returns (bool) {\\n        __transfer(sender, recipient, amount);\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\\n        return true;\\n    }\\n\\n    /// @notice receive ksd and distribute the ksd to dksd holder\\n    /// @param ksdAmount amount of receiving ksd\\n    /// @dev this function is called by KSDRewardManager contract\\n    function earn(uint256 ksdAmount) external override {\\n        if (ksdAmount > 0 && _totalSupply > 0) {\\n            ksd.transferFrom(msg.sender, address(this), ksdAmount);\\n\\n            uint256 earningPerShare = (WadRayMath.ray() * ksdAmount * precision) / _totalSupply;\\n            liquidityIndex = liquidityIndex + earningPerShare;\\n            emit Earn(block.timestamp, ksdAmount, liquidityIndex);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x78d16ae0f4f683721d3874a24fa42b04390da6cc2fba5cdd3abdbd0198f9471a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506121fc806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80638456cb5911610125578063b88d4fde116100ad578063dd62ed3e1161007c578063dd62ed3e14610461578063e65a01171461049a578063eb795549146104ad578063f2fde38b146104c0578063f3fef3a3146104d357610211565b8063b88d4fde14610426578063bbf44f3314610439578063d3b5dc3b14610442578063d547741f1461044e57610211565b8063a11b220f116100f4578063a11b220f146103c0578063a217fddf146103d3578063a592d9ec146103db578063a6d5f103146103e3578063a9059cbb1461041357610211565b80638456cb591461038a57806391d148541461039257806395d89b41146103a557806396e90558146103ad57610211565b80632f2ff15d116101a8578063423f6cef11610177578063423f6cef1461033357806342842e0e1461034657806347e7ef24146103595780635c975abb1461036c57806370a082311461037757610211565b80632f2ff15d146102ee578063313ce5671461030357806336568abe146103185780633f4ba83a1461032b57610211565b806312064c34116101e457806312064c341461028757806318160ddd146102b057806323b872dd146102b8578063248a9ca3146102cb57610211565b806301ffc9a71461021657806306fdde031461023e578063095ea7b3146102535780630f91c0fb14610266575b600080fd5b610229610224366004611fba565b6104e6565b60405190151581526020015b60405180910390f35b610246610509565b604051610235919061207a565b610229610261366004611ee2565b61059b565b610279610274366004611f80565b6105b2565b604051908152602001610235565b610279610295366004611df5565b6001600160a01b031660009081526002602052604090205490565b6102796105d9565b6102296102c6366004611e41565b610607565b6102796102d9366004611f80565b60009081526008602052604090206001015490565b6103016102fc366004611f98565b610659565b005b60075460405160ff9091168152602001610235565b610301610326366004611f98565b610684565b610301610707565b610301610341366004611ee2565b6107a5565b610301610354366004611e41565b6107bf565b610301610367366004611ee2565b6107da565b60095460ff16610229565b610279610385366004611df5565b6109bc565b6103016109ea565b6102296103a0366004611f98565b610a81565b610246610aac565b6102796103bb366004611f80565b610abb565b6103016103ce366004611df5565b610ad4565b610279600081565b600454610279565b6009546103fb9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610235565b610229610421366004611ee2565b610bd5565b610301610434366004611e7c565b610be2565b610279600a5481565b61027964e8d4a5100081565b61030161045c366004611f98565b610c74565b61027961046f366004611e0f565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6103016104a8366004611f80565b610c9a565b6103016104bb366004611f0b565b610dd7565b6103016104ce366004611df5565b610e60565b6103016104e1366004611ee2565b610e96565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60606005805461051890612149565b80601f016020809104026020016040519081016040528092919081815260200182805461054490612149565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b5050505050905090565b60006105a83384846110b0565b5060015b92915050565b600064e8d4a510006105cf600a54846111e790919063ffffffff16565b6105ac91906120f3565b600064e8d4a510006105f8600a546004546111e790919063ffffffff16565b61060291906120f3565b905090565b60006106148484846112bb565b6001600160a01b03841660009081526003602090815260408083203380855292529091205461064f91869161064a908690612132565b6110b0565b5060019392505050565b6000828152600860205260409020600101546106758133611467565b61067f83836114cb565b505050565b6001600160a01b03811633146106f95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6107038282611534565b5050565b60095460ff166107505760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106f0565b653830bab9b2b960d11b6107648133611467565b6009805460ff191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a150565b610703828260405180602001604052806000815250610dd7565b61067f83838360405180602001604052806000815250610be2565b60006107f9600a5464e8d4a51000846107f39190612113565b9061159b565b9050806108485760405162461bcd60e51b815260206004820152601f60248201527f444b53443a3a6465706f7369743a20746f6f20736d616c6c20616d6f756e740060448201526064016106f0565b6001600160a01b03831660009081526002602052604090205461086c9082906120db565b6001600160a01b0384166000908152600260205260409020556004546108939082906120db565b6004556040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36009546040516323b872dd60e01b8152336004820152306024820152604481018490526101009091046001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561092d57600080fd5b505af1158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190611f60565b50600a54604080516001600160a01b0386168152602081018590529081019190915233907fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7906060015b60405180910390a2505050565b600a546001600160a01b038216600090815260026020526040812054909164e8d4a51000916105cf916111e7565b60095460ff1615610a305760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106f0565b653830bab9b2b960d11b610a448133611467565b6009805460ff191660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589060200161079a565b60009182526008602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461051890612149565b60006105ac600a5464e8d4a51000846107f39190612113565b600054610100900460ff1680610ae95750303b155b80610af7575060005460ff16155b610b135760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015610b35576000805461ffff19166101011790555b610b3d6116aa565b610b8a6040518060400160405280600d81526020016c11195c1bdcda5d19590812d4d1609a1b815250604051806040016040528060048152602001631912d4d160e21b8152506012611755565b60098054610100600160a81b0319166101006001600160a01b03851602179055610bbd6b033b2e3c9fd0803ce800000090565b600a558015610703576000805461ff00191690555050565b60006105a83384846112bb565b610bed848484610607565b50610bfa848484846117e0565b610c6e576040805162461bcd60e51b81526020600482015260248101919091527f4b4950373a3a736166655472616e7366657246726f6d3a207472616e7366657260448201527f20746f206e6f6e204b495037526563656976657220696d706c656d656e74657260648201526084016106f0565b50505050565b600082815260086020526040902060010154610c908133611467565b61067f8383611534565b600081118015610cac57506000600454115b15610dd4576009546040516323b872dd60e01b8152336004820152306024820152604481018390526101009091046001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610d0757600080fd5b505af1158015610d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3f9190611f60565b50600060045464e8d4a5100083610d5f6b033b2e3c9fd0803ce800000090565b610d699190612113565b610d739190612113565b610d7d91906120f3565b905080600a54610d8d91906120db565b600a819055604080514281526020810185905280820192909252517f95419994d19f80701a2e6c34ec47f41f8acc4f3f7d0c65250eb99871e4eadd959181900360600190a1505b50565b610de18383610bd5565b50610dee338484846117e0565b61067f5760405162461bcd60e51b815260206004820152603c60248201527f4b4950373a3a736166655472616e736665723a207472616e7366657220746f2060448201527f6e6f6e204b495037526563656976657220696d706c656d656e7465720000000060648201526084016106f0565b610e726437bbb732b960d91b33611467565b610e846437bbb732b960d91b826114cb565b610dd46437bbb732b960d91b33611534565b80610ea0336109bc565b1015610efa5760405162461bcd60e51b8152602060048201526024808201527f444b53443a3a77697468647261773a20696e73756666696369656e742062616c604482015263616e636560e01b60648201526084016106f0565b6000610f13600a5464e8d4a51000846107f39190612113565b905080610f625760405162461bcd60e51b815260206004820181905260248201527f444b53443a3a77697468647261773a20746f6f20736d616c6c20616d6f756e7460448201526064016106f0565b33600090815260026020526040902054610f7d908290612132565b33600090815260026020526040902055600454610f9b908290612132565b60045560405182815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a360095460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590526101009092049091169063a9059cbb90604401602060405180830381600087803b15801561102a57600080fd5b505af115801561103e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110629190611f60565b50600a54604080516001600160a01b0386168152602081018590529081019190915233907ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567906060016109af565b6001600160a01b03831661111c5760405162461bcd60e51b815260206004820152602d60248201527f4b4950373a3a5f617070726f76653a20617070726f76652066726f6d2074686560448201526c207a65726f206164647265737360981b60648201526084016106f0565b6001600160a01b0382166111865760405162461bcd60e51b815260206004820152602b60248201527f4b4950373a3a5f617070726f76653a20617070726f766520746f20746865207a60448201526a65726f206164647265737360a81b60648201526084016106f0565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60008215806111f4575081155b15611201575060006105ac565b8161121960026b033b2e3c9fd0803ce80000006120f3565b61122590600019612132565b61122f91906120f3565b83111561127e5760405162461bcd60e51b815260206004820152601c60248201527f5761645261794d6174683a3a7261794d756c3a206f766572666c6f770000000060448201526064016106f0565b6b033b2e3c9fd0803ce80000006112966002826120f3565b6112a08486612113565b6112aa91906120db565b6112b491906120f3565b9392505050565b6001600160a01b0383166113295760405162461bcd60e51b815260206004820152602f60248201527f444b53443a3a5f7472616e736665723a207472616e736665722066726f6d207460448201526e6865207a65726f206164647265737360881b60648201526084016106f0565b6001600160a01b0382166113955760405162461bcd60e51b815260206004820152602d60248201527f444b53443a3a5f7472616e736665723a207472616e7366657220746f2074686560448201526c207a65726f206164647265737360981b60648201526084016106f0565b60006113ae600a5464e8d4a51000846107f39190612113565b6001600160a01b0385166000908152600260205260409020549091506113d5908290612132565b6001600160a01b0380861660009081526002602052604080822093909355908516815220546114059082906120db565b6001600160a01b0380851660008181526002602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114599086815260200190565b60405180910390a350505050565b6114718282610a81565b6107035760405162461bcd60e51b815260206004820152602560248201527f416363657373436f6e74726f6c3a5f636865636b526f6c653a696e76616c696460448201526420726f6c6560d81b60648201526084016106f0565b6114d58282610a81565b6107035760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b61153e8282610a81565b156107035760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000816115f55760405162461bcd60e51b815260206004820152602260248201527f5761645261794d6174683a3a7261794469763a20646976696465206279207a65604482015261726f60f01b60648201526084016106f0565b60006116026002846120f3565b90506b033b2e3c9fd0803ce800000061161d82600019612132565b61162791906120f3565b8411156116765760405162461bcd60e51b815260206004820152601c60248201527f5761645261794d6174683a3a7261794469763a206f766572666c6f770000000060448201526064016106f0565b828161168e6b033b2e3c9fd0803ce800000087612113565b61169891906120db565b6116a291906120f3565b949350505050565b600054610100900460ff16806116bf5750303b155b806116cd575060005460ff16155b6116e95760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff1615801561170b576000805461ffff19166101011790555b61171361189e565b61172e653830bab9b2b960d11b6437bbb732b960d91b611907565b611741653830bab9b2b960d11b33611952565b8015610dd4576000805461ff001916905550565b600054610100900460ff168061176a5750303b155b80611778575060005460ff16155b6117945760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff161580156117b6576000805461ffff19166101011790555b6117be61195c565b6117c98484846119cd565b8015610c6e576000805461ff001916905550505050565b60006001600160a01b0384163b6117f9575060016116a2565b604051634e8c461160e11b81526000906001600160a01b03861690639d188c229061182e9033908a908990899060040161203d565b602060405180830381600087803b15801561184857600080fd5b505af115801561185c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118809190611fd6565b6001600160e01b031916634e8c461160e11b14915050949350505050565b600054610100900460ff16806118b35750303b155b806118c1575060005460ff16155b6118dd5760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff161580156118ff576000805461ffff19166101011790555b611741611a75565b600082815260086020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61070382826114cb565b600054610100900460ff16806119715750303b155b8061197f575060005460ff16155b61199b5760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff161580156119bd576000805461ffff19166101011790555b6119c5611b46565b611741611bb7565b600054610100900460ff16806119e25750303b155b806119f0575060005460ff16155b611a0c5760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611a2e576000805461ffff19166101011790555b8351611a41906005906020870190611cbe565b508251611a55906006906020860190611cbe565b506007805460ff191660ff84161790556117c963a219a02560e01b611c24565b600054610100900460ff1680611a8a5750303b155b80611a98575060005460ff16155b611ab45760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611ad6576000805461ffff19166101011790555b611ae86437bbb732b960d91b33611952565b611b026430b236b4b760d91b6437bbb732b960d91b611907565b611b1f6737b832b930ba37b960c11b6437bbb732b960d91b611907565b611b316430b236b4b760d91b33611952565b6117416737b832b930ba37b960c11b33611952565b600054610100900460ff1680611b5b5750303b155b80611b69575060005460ff16155b611b855760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611ba7576000805461ffff19166101011790555b6117416301ffc9a760e01b611c24565b600054610100900460ff1680611bcc5750303b155b80611bda575060005460ff16155b611bf65760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611c18576000805461ffff19166101011790555b611741636578737160e01b5b6001600160e01b03198082161415611c965760405162461bcd60e51b815260206004820152602f60248201527f4b495031333a3a5f7265676973746572496e746572666163653a20696e76616c60448201526e1a59081a5b9d195c999858d9481a59608a1b60648201526084016106f0565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b828054611cca90612149565b90600052602060002090601f016020900481019282611cec5760008555611d32565b82601f10611d0557805160ff1916838001178555611d32565b82800160010185558215611d32579182015b82811115611d32578251825591602001919060010190611d17565b50611d3e929150611d42565b5090565b5b80821115611d3e5760008155600101611d43565b80356001600160a01b038116811461050457600080fd5b600082601f830112611d7e578081fd5b813567ffffffffffffffff80821115611d9957611d9961219a565b604051601f8301601f19908116603f01168101908282118183101715611dc157611dc161219a565b81604052838152866020858801011115611dd9578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611e06578081fd5b6112b482611d57565b60008060408385031215611e21578081fd5b611e2a83611d57565b9150611e3860208401611d57565b90509250929050565b600080600060608486031215611e55578081fd5b611e5e84611d57565b9250611e6c60208501611d57565b9150604084013590509250925092565b60008060008060808587031215611e91578081fd5b611e9a85611d57565b9350611ea860208601611d57565b925060408501359150606085013567ffffffffffffffff811115611eca578182fd5b611ed687828801611d6e565b91505092959194509250565b60008060408385031215611ef4578182fd5b611efd83611d57565b946020939093013593505050565b600080600060608486031215611f1f578283fd5b611f2884611d57565b925060208401359150604084013567ffffffffffffffff811115611f4a578182fd5b611f5686828701611d6e565b9150509250925092565b600060208284031215611f71578081fd5b815180151581146112b4578182fd5b600060208284031215611f91578081fd5b5035919050565b60008060408385031215611faa578182fd5b82359150611e3860208401611d57565b600060208284031215611fcb578081fd5b81356112b4816121b0565b600060208284031215611fe7578081fd5b81516112b4816121b0565b60008151808452815b8181101561201757602081850181015186830182015201611ffb565b818111156120285782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061207090830184611ff2565b9695505050505050565b6000602082526112b46020830184611ff2565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082198211156120ee576120ee612184565b500190565b60008261210e57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561212d5761212d612184565b500290565b60008282101561214457612144612184565b500390565b600181811c9082168061215d57607f821691505b6020821081141561217e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610dd457600080fdfea264697066735822122077430c35f250e718d0b835465387ab74fd242f91110e953bfcf26591a1e6bad364736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102115760003560e01c80638456cb5911610125578063b88d4fde116100ad578063dd62ed3e1161007c578063dd62ed3e14610461578063e65a01171461049a578063eb795549146104ad578063f2fde38b146104c0578063f3fef3a3146104d357610211565b8063b88d4fde14610426578063bbf44f3314610439578063d3b5dc3b14610442578063d547741f1461044e57610211565b8063a11b220f116100f4578063a11b220f146103c0578063a217fddf146103d3578063a592d9ec146103db578063a6d5f103146103e3578063a9059cbb1461041357610211565b80638456cb591461038a57806391d148541461039257806395d89b41146103a557806396e90558146103ad57610211565b80632f2ff15d116101a8578063423f6cef11610177578063423f6cef1461033357806342842e0e1461034657806347e7ef24146103595780635c975abb1461036c57806370a082311461037757610211565b80632f2ff15d146102ee578063313ce5671461030357806336568abe146103185780633f4ba83a1461032b57610211565b806312064c34116101e457806312064c341461028757806318160ddd146102b057806323b872dd146102b8578063248a9ca3146102cb57610211565b806301ffc9a71461021657806306fdde031461023e578063095ea7b3146102535780630f91c0fb14610266575b600080fd5b610229610224366004611fba565b6104e6565b60405190151581526020015b60405180910390f35b610246610509565b604051610235919061207a565b610229610261366004611ee2565b61059b565b610279610274366004611f80565b6105b2565b604051908152602001610235565b610279610295366004611df5565b6001600160a01b031660009081526002602052604090205490565b6102796105d9565b6102296102c6366004611e41565b610607565b6102796102d9366004611f80565b60009081526008602052604090206001015490565b6103016102fc366004611f98565b610659565b005b60075460405160ff9091168152602001610235565b610301610326366004611f98565b610684565b610301610707565b610301610341366004611ee2565b6107a5565b610301610354366004611e41565b6107bf565b610301610367366004611ee2565b6107da565b60095460ff16610229565b610279610385366004611df5565b6109bc565b6103016109ea565b6102296103a0366004611f98565b610a81565b610246610aac565b6102796103bb366004611f80565b610abb565b6103016103ce366004611df5565b610ad4565b610279600081565b600454610279565b6009546103fb9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610235565b610229610421366004611ee2565b610bd5565b610301610434366004611e7c565b610be2565b610279600a5481565b61027964e8d4a5100081565b61030161045c366004611f98565b610c74565b61027961046f366004611e0f565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6103016104a8366004611f80565b610c9a565b6103016104bb366004611f0b565b610dd7565b6103016104ce366004611df5565b610e60565b6103016104e1366004611ee2565b610e96565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60606005805461051890612149565b80601f016020809104026020016040519081016040528092919081815260200182805461054490612149565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b5050505050905090565b60006105a83384846110b0565b5060015b92915050565b600064e8d4a510006105cf600a54846111e790919063ffffffff16565b6105ac91906120f3565b600064e8d4a510006105f8600a546004546111e790919063ffffffff16565b61060291906120f3565b905090565b60006106148484846112bb565b6001600160a01b03841660009081526003602090815260408083203380855292529091205461064f91869161064a908690612132565b6110b0565b5060019392505050565b6000828152600860205260409020600101546106758133611467565b61067f83836114cb565b505050565b6001600160a01b03811633146106f95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6107038282611534565b5050565b60095460ff166107505760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106f0565b653830bab9b2b960d11b6107648133611467565b6009805460ff191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a150565b610703828260405180602001604052806000815250610dd7565b61067f83838360405180602001604052806000815250610be2565b60006107f9600a5464e8d4a51000846107f39190612113565b9061159b565b9050806108485760405162461bcd60e51b815260206004820152601f60248201527f444b53443a3a6465706f7369743a20746f6f20736d616c6c20616d6f756e740060448201526064016106f0565b6001600160a01b03831660009081526002602052604090205461086c9082906120db565b6001600160a01b0384166000908152600260205260409020556004546108939082906120db565b6004556040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36009546040516323b872dd60e01b8152336004820152306024820152604481018490526101009091046001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561092d57600080fd5b505af1158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190611f60565b50600a54604080516001600160a01b0386168152602081018590529081019190915233907fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7906060015b60405180910390a2505050565b600a546001600160a01b038216600090815260026020526040812054909164e8d4a51000916105cf916111e7565b60095460ff1615610a305760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106f0565b653830bab9b2b960d11b610a448133611467565b6009805460ff191660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589060200161079a565b60009182526008602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461051890612149565b60006105ac600a5464e8d4a51000846107f39190612113565b600054610100900460ff1680610ae95750303b155b80610af7575060005460ff16155b610b135760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015610b35576000805461ffff19166101011790555b610b3d6116aa565b610b8a6040518060400160405280600d81526020016c11195c1bdcda5d19590812d4d1609a1b815250604051806040016040528060048152602001631912d4d160e21b8152506012611755565b60098054610100600160a81b0319166101006001600160a01b03851602179055610bbd6b033b2e3c9fd0803ce800000090565b600a558015610703576000805461ff00191690555050565b60006105a83384846112bb565b610bed848484610607565b50610bfa848484846117e0565b610c6e576040805162461bcd60e51b81526020600482015260248101919091527f4b4950373a3a736166655472616e7366657246726f6d3a207472616e7366657260448201527f20746f206e6f6e204b495037526563656976657220696d706c656d656e74657260648201526084016106f0565b50505050565b600082815260086020526040902060010154610c908133611467565b61067f8383611534565b600081118015610cac57506000600454115b15610dd4576009546040516323b872dd60e01b8152336004820152306024820152604481018390526101009091046001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610d0757600080fd5b505af1158015610d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3f9190611f60565b50600060045464e8d4a5100083610d5f6b033b2e3c9fd0803ce800000090565b610d699190612113565b610d739190612113565b610d7d91906120f3565b905080600a54610d8d91906120db565b600a819055604080514281526020810185905280820192909252517f95419994d19f80701a2e6c34ec47f41f8acc4f3f7d0c65250eb99871e4eadd959181900360600190a1505b50565b610de18383610bd5565b50610dee338484846117e0565b61067f5760405162461bcd60e51b815260206004820152603c60248201527f4b4950373a3a736166655472616e736665723a207472616e7366657220746f2060448201527f6e6f6e204b495037526563656976657220696d706c656d656e7465720000000060648201526084016106f0565b610e726437bbb732b960d91b33611467565b610e846437bbb732b960d91b826114cb565b610dd46437bbb732b960d91b33611534565b80610ea0336109bc565b1015610efa5760405162461bcd60e51b8152602060048201526024808201527f444b53443a3a77697468647261773a20696e73756666696369656e742062616c604482015263616e636560e01b60648201526084016106f0565b6000610f13600a5464e8d4a51000846107f39190612113565b905080610f625760405162461bcd60e51b815260206004820181905260248201527f444b53443a3a77697468647261773a20746f6f20736d616c6c20616d6f756e7460448201526064016106f0565b33600090815260026020526040902054610f7d908290612132565b33600090815260026020526040902055600454610f9b908290612132565b60045560405182815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a360095460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590526101009092049091169063a9059cbb90604401602060405180830381600087803b15801561102a57600080fd5b505af115801561103e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110629190611f60565b50600a54604080516001600160a01b0386168152602081018590529081019190915233907ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567906060016109af565b6001600160a01b03831661111c5760405162461bcd60e51b815260206004820152602d60248201527f4b4950373a3a5f617070726f76653a20617070726f76652066726f6d2074686560448201526c207a65726f206164647265737360981b60648201526084016106f0565b6001600160a01b0382166111865760405162461bcd60e51b815260206004820152602b60248201527f4b4950373a3a5f617070726f76653a20617070726f766520746f20746865207a60448201526a65726f206164647265737360a81b60648201526084016106f0565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60008215806111f4575081155b15611201575060006105ac565b8161121960026b033b2e3c9fd0803ce80000006120f3565b61122590600019612132565b61122f91906120f3565b83111561127e5760405162461bcd60e51b815260206004820152601c60248201527f5761645261794d6174683a3a7261794d756c3a206f766572666c6f770000000060448201526064016106f0565b6b033b2e3c9fd0803ce80000006112966002826120f3565b6112a08486612113565b6112aa91906120db565b6112b491906120f3565b9392505050565b6001600160a01b0383166113295760405162461bcd60e51b815260206004820152602f60248201527f444b53443a3a5f7472616e736665723a207472616e736665722066726f6d207460448201526e6865207a65726f206164647265737360881b60648201526084016106f0565b6001600160a01b0382166113955760405162461bcd60e51b815260206004820152602d60248201527f444b53443a3a5f7472616e736665723a207472616e7366657220746f2074686560448201526c207a65726f206164647265737360981b60648201526084016106f0565b60006113ae600a5464e8d4a51000846107f39190612113565b6001600160a01b0385166000908152600260205260409020549091506113d5908290612132565b6001600160a01b0380861660009081526002602052604080822093909355908516815220546114059082906120db565b6001600160a01b0380851660008181526002602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114599086815260200190565b60405180910390a350505050565b6114718282610a81565b6107035760405162461bcd60e51b815260206004820152602560248201527f416363657373436f6e74726f6c3a5f636865636b526f6c653a696e76616c696460448201526420726f6c6560d81b60648201526084016106f0565b6114d58282610a81565b6107035760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b61153e8282610a81565b156107035760008281526008602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000816115f55760405162461bcd60e51b815260206004820152602260248201527f5761645261794d6174683a3a7261794469763a20646976696465206279207a65604482015261726f60f01b60648201526084016106f0565b60006116026002846120f3565b90506b033b2e3c9fd0803ce800000061161d82600019612132565b61162791906120f3565b8411156116765760405162461bcd60e51b815260206004820152601c60248201527f5761645261794d6174683a3a7261794469763a206f766572666c6f770000000060448201526064016106f0565b828161168e6b033b2e3c9fd0803ce800000087612113565b61169891906120db565b6116a291906120f3565b949350505050565b600054610100900460ff16806116bf5750303b155b806116cd575060005460ff16155b6116e95760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff1615801561170b576000805461ffff19166101011790555b61171361189e565b61172e653830bab9b2b960d11b6437bbb732b960d91b611907565b611741653830bab9b2b960d11b33611952565b8015610dd4576000805461ff001916905550565b600054610100900460ff168061176a5750303b155b80611778575060005460ff16155b6117945760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff161580156117b6576000805461ffff19166101011790555b6117be61195c565b6117c98484846119cd565b8015610c6e576000805461ff001916905550505050565b60006001600160a01b0384163b6117f9575060016116a2565b604051634e8c461160e11b81526000906001600160a01b03861690639d188c229061182e9033908a908990899060040161203d565b602060405180830381600087803b15801561184857600080fd5b505af115801561185c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118809190611fd6565b6001600160e01b031916634e8c461160e11b14915050949350505050565b600054610100900460ff16806118b35750303b155b806118c1575060005460ff16155b6118dd5760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff161580156118ff576000805461ffff19166101011790555b611741611a75565b600082815260086020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61070382826114cb565b600054610100900460ff16806119715750303b155b8061197f575060005460ff16155b61199b5760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff161580156119bd576000805461ffff19166101011790555b6119c5611b46565b611741611bb7565b600054610100900460ff16806119e25750303b155b806119f0575060005460ff16155b611a0c5760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611a2e576000805461ffff19166101011790555b8351611a41906005906020870190611cbe565b508251611a55906006906020860190611cbe565b506007805460ff191660ff84161790556117c963a219a02560e01b611c24565b600054610100900460ff1680611a8a5750303b155b80611a98575060005460ff16155b611ab45760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611ad6576000805461ffff19166101011790555b611ae86437bbb732b960d91b33611952565b611b026430b236b4b760d91b6437bbb732b960d91b611907565b611b1f6737b832b930ba37b960c11b6437bbb732b960d91b611907565b611b316430b236b4b760d91b33611952565b6117416737b832b930ba37b960c11b33611952565b600054610100900460ff1680611b5b5750303b155b80611b69575060005460ff16155b611b855760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611ba7576000805461ffff19166101011790555b6117416301ffc9a760e01b611c24565b600054610100900460ff1680611bcc5750303b155b80611bda575060005460ff16155b611bf65760405162461bcd60e51b81526004016106f09061208d565b600054610100900460ff16158015611c18576000805461ffff19166101011790555b611741636578737160e01b5b6001600160e01b03198082161415611c965760405162461bcd60e51b815260206004820152602f60248201527f4b495031333a3a5f7265676973746572496e746572666163653a20696e76616c60448201526e1a59081a5b9d195c999858d9481a59608a1b60648201526084016106f0565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b828054611cca90612149565b90600052602060002090601f016020900481019282611cec5760008555611d32565b82601f10611d0557805160ff1916838001178555611d32565b82800160010185558215611d32579182015b82811115611d32578251825591602001919060010190611d17565b50611d3e929150611d42565b5090565b5b80821115611d3e5760008155600101611d43565b80356001600160a01b038116811461050457600080fd5b600082601f830112611d7e578081fd5b813567ffffffffffffffff80821115611d9957611d9961219a565b604051601f8301601f19908116603f01168101908282118183101715611dc157611dc161219a565b81604052838152866020858801011115611dd9578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611e06578081fd5b6112b482611d57565b60008060408385031215611e21578081fd5b611e2a83611d57565b9150611e3860208401611d57565b90509250929050565b600080600060608486031215611e55578081fd5b611e5e84611d57565b9250611e6c60208501611d57565b9150604084013590509250925092565b60008060008060808587031215611e91578081fd5b611e9a85611d57565b9350611ea860208601611d57565b925060408501359150606085013567ffffffffffffffff811115611eca578182fd5b611ed687828801611d6e565b91505092959194509250565b60008060408385031215611ef4578182fd5b611efd83611d57565b946020939093013593505050565b600080600060608486031215611f1f578283fd5b611f2884611d57565b925060208401359150604084013567ffffffffffffffff811115611f4a578182fd5b611f5686828701611d6e565b9150509250925092565b600060208284031215611f71578081fd5b815180151581146112b4578182fd5b600060208284031215611f91578081fd5b5035919050565b60008060408385031215611faa578182fd5b82359150611e3860208401611d57565b600060208284031215611fcb578081fd5b81356112b4816121b0565b600060208284031215611fe7578081fd5b81516112b4816121b0565b60008151808452815b8181101561201757602081850181015186830182015201611ffb565b818111156120285782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061207090830184611ff2565b9695505050505050565b6000602082526112b46020830184611ff2565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082198211156120ee576120ee612184565b500190565b60008261210e57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561212d5761212d612184565b500290565b60008282101561214457612144612184565b500390565b600181811c9082168061215d57607f821691505b6020821081141561217e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610dd457600080fdfea264697066735822122077430c35f250e718d0b835465387ab74fd242f91110e953bfcf26591a1e6bad364736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(address,uint256)": {
        "params": {
          "amount": "amount of depositing ksd",
          "to": "address of receiving dksd"
        }
      },
      "earn(uint256)": {
        "details": "this function is called by KSDRewardManager contract",
        "params": {
          "ksdAmount": "amount of receiving ksd"
        }
      },
      "fromRawAmount(uint256)": {
        "params": {
          "rawAmount": "rawAmount"
        },
        "returns": {
          "_0": "amount of corresponding to rawAmount"
        }
      },
      "rawBalanceOf(address)": {
        "params": {
          "usr": "address of user"
        }
      },
      "toRawAmount(uint256)": {
        "params": {
          "amount": "amount"
        }
      },
      "withdraw(address,uint256)": {
        "params": {
          "amount": "amount of withdrawing dksd",
          "to": "address of receiving ksd"
        }
      }
    },
    "title": "A delegated stable coin.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(address,uint256)": {
        "notice": "deposit ksd, and receive dksd."
      },
      "earn(uint256)": {
        "notice": "receive ksd and distribute the ksd to dksd holder"
      },
      "fromRawAmount(uint256)": {
        "notice": "calculate amount of corresponding to rawAmount"
      },
      "liquidityIndex()": {
        "notice": "multiplicative factor for increasing balance/totalSupply dksd랑 ksd랑 1 대 1 페깅 시키게 만드는 변수로, 유저가 처음 KSD를 a 만큼 deposit하면, a / liquidityIndex 만큼 유저의 _balance를 증가시킨다. 반면 balanceOf 함수에서는 유저의 balance를 보여줄 때는 _balance * liquidityIndex 만큼 보여주기 때문에, 유저에게 보여지는 balance 양은 a 로 보여지게 된다. 유저가 withdraw 하기 전에, yield 수익이 DKSD contract로 분배되면 liquidityIndex는 증가하게 되고, 유저의 _balance는 변함 없지만, balance는 증가한 것 처럼 보이게 된다."
      },
      "precision()": {
        "notice": "precision of scaled values"
      },
      "rawBalanceOf(address)": {
        "notice": "get raw balance of user"
      },
      "rawTotalSupply()": {
        "notice": "get raw total balance"
      },
      "toRawAmount(uint256)": {
        "notice": "calculate rawAmount of corresponding to amount"
      },
      "withdraw(address,uint256)": {
        "notice": "burn dksd, and withdraw ksd"
      }
    },
    "notice": "Users can deposit ksd and in return receive dksd, and also dksd holder can exchange dksd to ksd in a ratio of 1 to 1. The purpose of this contract is distributing profit of yield farming to dksd holder. The profit of yield framing is swapped into KSD, and the KSD distributed to dKSD holder. Therefore, the balance of dKSD holder increases with the passing of time. For example, if you deposit 100KSD at first, you receive 100dKSD. With the passing of time, the balance of your DKSD becomes 101dKSD. And then, you can withdraw 101KSD.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23220,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 23223,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 21175,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_supportedInterfaces",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes4,t_bool)"
      },
      {
        "astId": 21239,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_balances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21245,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_allowances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 21247,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 21627,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_name",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 21629,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_symbol",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 21631,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_decimals",
        "offset": 0,
        "slot": "7",
        "type": "t_uint8"
      },
      {
        "astId": 20166,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_roles",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)20161_storage)"
      },
      {
        "astId": 20556,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "_paused",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 32706,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "ksd",
        "offset": 1,
        "slot": "9",
        "type": "t_contract(IKIP7)9881"
      },
      {
        "astId": 32710,
        "contract": "contracts/saving/DKSD.sol:DKSD",
        "label": "liquidityIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IKIP7)9881": {
        "encoding": "inplace",
        "label": "contract IKIP7",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)20161_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)20161_storage"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(RoleData)20161_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 20158,
            "contract": "contracts/saving/DKSD.sol:DKSD",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20160,
            "contract": "contracts/saving/DKSD.sol:DKSD",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}